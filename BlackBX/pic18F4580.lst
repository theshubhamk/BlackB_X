

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Sep 28 12:09:25 2019

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  000EFE                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for main@z
    54  000EFE  0001               	dw	1
    55                           
    56                           ;initializer for read_switches@once
    57  000F00  01                 	db	1
    58  0000                     _TMR0	set	4054
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADRESH	set	4036
    61  0000                     _ADRESL	set	4035
    62  0000                     _EEADR	set	4009
    63  0000                     _EECON1bits	set	4006
    64  0000                     _EECON2	set	4007
    65  0000                     _EEDATA	set	4008
    66  0000                     _PIR1bits	set	3998
    67  0000                     _PIR2bits	set	4001
    68  0000                     _PORTB	set	3969
    69  0000                     _PORTBbits	set	3969
    70  0000                     _PORTCbits	set	3970
    71  0000                     _PORTD	set	3971
    72  0000                     _PORTDbits	set	3971
    73  0000                     _SSPADD	set	4040
    74  0000                     _SSPBUF	set	4041
    75  0000                     _SSPCON1	set	4038
    76  0000                     _SSPCON2bits	set	4037
    77  0000                     _SSPSTAT	set	4039
    78  0000                     _TRISB	set	3987
    79  0000                     _TRISC	set	3988
    80  0000                     _TRISD	set	3989
    81  0000                     _ACKDT	set	32301
    82  0000                     _ACKEN	set	32300
    83  0000                     _ACKSTAT	set	32302
    84  0000                     _ACQT0	set	32259
    85  0000                     _ACQT1	set	32260
    86  0000                     _ACQT2	set	32261
    87  0000                     _ADCS0	set	32256
    88  0000                     _ADCS1	set	32257
    89  0000                     _ADCS2	set	32258
    90  0000                     _ADFM	set	32263
    91  0000                     _ADON	set	32272
    92  0000                     _BCLIF	set	32011
    93  0000                     _CHS0	set	32274
    94  0000                     _CHS1	set	32275
    95  0000                     _CHS2	set	32276
    96  0000                     _CHS3	set	32277
    97  0000                     _CKE	set	32318
    98  0000                     _GIE	set	32663
    99  0000                     _GO	set	32273
   100  0000                     _GODONE	set	32273
   101  0000                     _PEIE	set	32662
   102  0000                     _PEN	set	32298
   103  0000                     _PSA	set	32427
   104  0000                     _RBPU	set	32655
   105  0000                     _RCEN	set	32299
   106  0000                     _RSEN	set	32297
   107  0000                     _SEN	set	32296
   108  0000                     _SMP	set	32319
   109  0000                     _SSPIF	set	31987
   110  0000                     _T08BIT	set	32430
   111  0000                     _T0CS	set	32429
   112  0000                     _T0IF	set	32658
   113  0000                     _TMR0IE	set	32661
   114  0000                     _TMR0IF	set	32658
   115  0000                     _TMR0ON	set	32431
   116  0000                     _TRISC3	set	31907
   117  0000                     _TRISC4	set	31908
   118  0000                     _TRISD7	set	31919
   119  0000                     _VCFG0	set	32268
   120  0000                     _VCFG1	set	32269
   121                           
   122                           	psect	smallconst
   123  000600                     __psmallconst:
   124                           	opt stack 0
   125  000600  00                 	db	0
   126  000601                     STR_1:
   127  000601  20                 	db	32
   128  000602  20                 	db	32
   129  000603  54                 	db	84	;'T'
   130  000604  49                 	db	73	;'I'
   131  000605  4D                 	db	77	;'M'
   132  000606  45                 	db	69	;'E'
   133  000607  20                 	db	32
   134  000608  20                 	db	32
   135  000609  20                 	db	32
   136  00060A  45                 	db	69	;'E'
   137  00060B  56                 	db	86	;'V'
   138  00060C  54                 	db	84	;'T'
   139  00060D  20                 	db	32
   140  00060E  53                 	db	83	;'S'
   141  00060F  50                 	db	80	;'P'
   142  000610  44                 	db	68	;'D'
   143  000611  00                 	db	0
   144  000612                     STR_3:
   145  000612  4F                 	db	79	;'O'
   146  000613  46                 	db	70	;'F'
   147  000614  46                 	db	70	;'F'
   148  000615  00                 	db	0
   149  000616                     STR_2:
   150  000616  20                 	db	32
   151  000617  4F                 	db	79	;'O'
   152  000618  4E                 	db	78	;'N'
   153  000619  00                 	db	0
   154                           
   155                           ; #config settings
   156  00061A  00                 	db	0	; dummy byte at the end
   157  0000                     
   158                           	psect	cinit
   159  000CB4                     __pcinit:
   160                           	opt stack 0
   161  000CB4                     start_initialization:
   162                           	opt stack 0
   163  000CB4                     __initialization:
   164                           	opt stack 0
   165                           
   166                           ; Clear objects allocated to COMRAM (40 bytes)
   167  000CB4  EE00  F001         	lfsr	0,__pbssCOMRAM
   168  000CB8  0E28               	movlw	40
   169  000CBA                     clear_0:
   170  000CBA  6AEE               	clrf	postinc0,c
   171  000CBC  06E8               	decf	wreg,f,c
   172  000CBE  E1FD               	bnz	clear_0
   173                           
   174                           ; Initialize objects allocated to COMRAM (3 bytes)
   175                           ; load TBLPTR registers with __pidataCOMRAM
   176  000CC0  0EFE               	movlw	low __pidataCOMRAM
   177  000CC2  6EF6               	movwf	tblptrl,c
   178  000CC4  0E0E               	movlw	high __pidataCOMRAM
   179  000CC6  6EF7               	movwf	tblptrh,c
   180  000CC8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   181  000CCA  6EF8               	movwf	tblptru,c
   182  000CCC  0009               	tblrd		*+	;fetch initializer
   183  000CCE  CFF5 F044          	movff	tablat,__pdataCOMRAM
   184  000CD2  0009               	tblrd		*+	;fetch initializer
   185  000CD4  CFF5 F045          	movff	tablat,__pdataCOMRAM+1
   186  000CD8  0009               	tblrd		*+	;fetch initializer
   187  000CDA  CFF5 F046          	movff	tablat,__pdataCOMRAM+2
   188  000CDE                     end_of_initialization:
   189                           	opt stack 0
   190  000CDE                     __end_of__initialization:
   191                           	opt stack 0
   192  000CDE  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   193  000CE0  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   194  000CE2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   195  000CE4  6EF8               	movwf	tblptru,c
   196  000CE6  0100               	movlb	0
   197  000CE8  EF0E  F003         	goto	_main	;jump to C main() function
   198                           tblptru	equ	0xFF8
   199                           tblptrh	equ	0xFF7
   200                           tblptrl	equ	0xFF6
   201                           tablat	equ	0xFF5
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           
   205                           	psect	bssCOMRAM
   206  000001                     __pbssCOMRAM:
   207                           	opt stack 0
   208  000001                     _calender_reg:
   209                           	opt stack 0
   210  000001                     	ds	4
   211  000005                     _clock_reg:
   212                           	opt stack 0
   213  000005                     	ds	3
   214  000008                     _flag:
   215                           	opt stack 0
   216  000008                     	ds	2
   217  00000A                     isr@count:
   218                           	opt stack 0
   219  00000A                     	ds	2
   220  00000C                     	ds	2
   221  00000E                     	ds	2
   222  000010                     	ds	2
   223  000012                     	ds	2
   224  000014                     main@toggle:
   225                           	opt stack 0
   226  000014                     	ds	1
   227  000015                     _date:
   228                           	opt stack 0
   229  000015                     	ds	11
   230  000020                     _time:
   231                           	opt stack 0
   232  000020                     	ds	9
   233                           tblptru	equ	0xFF8
   234                           tblptrh	equ	0xFF7
   235                           tblptrl	equ	0xFF6
   236                           tablat	equ	0xFF5
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           
   240                           	psect	dataCOMRAM
   241  000044                     __pdataCOMRAM:
   242                           	opt stack 0
   243  000044                     main@z:
   244                           	opt stack 0
   245  000044                     	ds	2
   246  000046                     read_switches@once:
   247                           	opt stack 0
   248  000046                     	ds	1
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           
   256                           	psect	cstackBANK0
   257  000060                     __pcstackBANK0:
   258                           	opt stack 0
   259  000060                     main@i:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x0
   263  000060                     	ds	2
   264  000062                     main@adc_reg_val:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x2
   268  000062                     	ds	2
   269  000064                     main@buff:
   270                           	opt stack 0
   271                           
   272                           ; 5 bytes @ 0x4
   273  000064                     	ds	5
   274  000069                     main@key:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x9
   278  000069                     	ds	1
   279  00006A                     main@key1:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0xA
   283  00006A                     	ds	1
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           
   291                           	psect	cstackCOMRAM
   292  000029                     __pcstackCOMRAM:
   293                           	opt stack 0
   294  000029                     ??_isr:
   295  000029                     
   296                           ; 1 bytes @ 0x0
   297  000029                     	ds	14
   298  000037                     ?_read_adc:
   299                           	opt stack 0
   300  000037                     ?___lwmod:
   301                           	opt stack 0
   302  000037                     clcd_write@control_bit:
   303                           	opt stack 0
   304  000037                     read_switches@key1:
   305                           	opt stack 0
   306  000037                     write_internal_eeprom@data:
   307                           	opt stack 0
   308  000037                     read_internal_eeprom@address:
   309                           	opt stack 0
   310  000037                     i2c_write@data:
   311                           	opt stack 0
   312  000037                     ___lwmod@dividend:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0xE
   316  000037                     	ds	1
   317  000038                     clcd_write@byte:
   318                           	opt stack 0
   319  000038                     read_switches@detection_type:
   320                           	opt stack 0
   321  000038                     write_ds1307@data:
   322                           	opt stack 0
   323  000038                     read_ds1307@address:
   324                           	opt stack 0
   325  000038                     write_internal_eeprom@address:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0xF
   329  000038                     	ds	1
   330  000039                     ??_read_adc:
   331  000039                     clcd_putch@addr:
   332                           	opt stack 0
   333  000039                     read_switches@key:
   334                           	opt stack 0
   335  000039                     write_ds1307@address:
   336                           	opt stack 0
   337  000039                     read_ds1307@data:
   338                           	opt stack 0
   339  000039                     clcd_print@data:
   340                           	opt stack 0
   341  000039                     ___lwmod@divisor:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x10
   345  000039                     	ds	1
   346  00003A                     clcd_putch@data:
   347                           	opt stack 0
   348  00003A                     init_ds1307@dummy:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x11
   352  00003A                     	ds	1
   353  00003B                     clcd_print@addr:
   354                           	opt stack 0
   355  00003B                     ___lwmod@counter:
   356                           	opt stack 0
   357  00003B                     read_adc@reg_val:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x12
   361  00003B                     	ds	1
   362  00003C                     
   363                           ; 1 bytes @ 0x13
   364  00003C                     	ds	1
   365  00003D                     ?___lwdiv:
   366                           	opt stack 0
   367  00003D                     ___lwdiv@dividend:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x14
   371  00003D                     	ds	2
   372  00003F                     ___lwdiv@divisor:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x16
   376  00003F                     	ds	2
   377  000041                     ___lwdiv@counter:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x18
   381  000041                     	ds	1
   382  000042                     ___lwdiv@quotient:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x19
   386  000042                     	ds	2
   387  000044                     tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           
   394                           ; 1 bytes @ 0x1B
   395 ;;
   396 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   397 ;;
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 105 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;  buff            5    4[BANK0 ] unsigned char [5]
   405 ;;  i               2    0[BANK0 ] int 
   406 ;;  e               3    0        unsigned char [3]
   407 ;;  adc_reg_val     2    2[BANK0 ] unsigned short 
   408 ;;  key1            1   10[BANK0 ] unsigned char 
   409 ;;  key             1    9[BANK0 ] unsigned char 
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   419 ;;      Params:         0       0       0       0       0       0       0
   420 ;;      Locals:         0      11       0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0       0       0
   422 ;;      Totals:         0      11       0       0       0       0       0
   423 ;;Total ram usage:       11 bytes
   424 ;; Hardware stack levels required when called:    7
   425 ;; This function calls:
   426 ;;		___lwdiv
   427 ;;		___lwmod
   428 ;;		_clcd_print
   429 ;;		_clcd_putch
   430 ;;		_clcd_write
   431 ;;		_display_time
   432 ;;		_get_time
   433 ;;		_init_config
   434 ;;		_read_adc
   435 ;;		_read_internal_eeprom
   436 ;;		_read_switches
   437 ;;		_write_internal_eeprom
   438 ;; This function is called by:
   439 ;;		Startup code after reset
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	text0
   444  00061C                     __ptext0:
   445                           	opt stack 0
   446  00061C                     _main:
   447                           	opt stack 24
   448                           
   449                           ;main.c: 107: init_config();
   450                           
   451                           ;incstack = 0
   452  00061C  ECF4  F006         	call	_init_config	;wreg free
   453                           
   454                           ;main.c: 119: clcd_print("  TIME   EVT SPD", (0x80 + (0)));
   455  000620  0E01               	movlw	low STR_1
   456  000622  6E39               	movwf	clcd_print@data,c
   457  000624  0E06               	movlw	high STR_1
   458  000626  6E3A               	movwf	clcd_print@data+1,c
   459  000628  0E80               	movlw	128
   460  00062A  6E3B               	movwf	clcd_print@addr,c
   461  00062C  EC94  F005         	call	_clcd_print	;wreg free
   462  000630                     l2312:
   463                           
   464                           ;main.c: 134: {
   465                           ;main.c: 137: adc_reg_val = read_adc(0x04) / 10;
   466  000630  0E04               	movlw	4
   467  000632  ECE1  F006         	call	_read_adc
   468  000636  C037  F03D         	movff	?_read_adc,___lwdiv@dividend
   469  00063A  C038  F03E         	movff	?_read_adc+1,___lwdiv@dividend+1
   470  00063E  0E00               	movlw	0
   471  000640  6E40               	movwf	___lwdiv@divisor+1,c
   472  000642  0E0A               	movlw	10
   473  000644  6E3F               	movwf	___lwdiv@divisor,c
   474  000646  ECEF  F005         	call	___lwdiv	;wreg free
   475  00064A  C03D  F062         	movff	?___lwdiv,main@adc_reg_val
   476  00064E  C03E  F063         	movff	?___lwdiv+1,main@adc_reg_val+1
   477                           
   478                           ;main.c: 138: static unsigned short prog_cycle;
   479                           ;main.c: 139: static unsigned short duty_change;
   480                           ;main.c: 141: char buff[5];
   481                           ;main.c: 146: int i = 3;
   482  000652  0E00               	movlw	0
   483  000654  0100               	movlb	0	; () banked
   484  000656  6F61               	movwf	(main@i+1)& (0+255),b
   485  000658  0E03               	movlw	3
   486  00065A  6F60               	movwf	main@i& (0+255),b
   487  00065C                     l2316:
   488                           
   489                           ; BSR set to: 0
   490                           ;main.c: 148: {
   491                           ;main.c: 149: buff[i] = (adc_reg_val % 10) + '0';
   492  00065C  0E64               	movlw	low main@buff
   493  00065E  0100               	movlb	0	; () banked
   494  000660  2560               	addwf	main@i& (0+255),w,b
   495  000662  6ED9               	movwf	fsr2l,c
   496  000664  0E00               	movlw	high main@buff
   497  000666  0100               	movlb	0	; () banked
   498  000668  2161               	addwfc	(main@i+1)& (0+255),w,b
   499  00066A  6EDA               	movwf	fsr2h,c
   500  00066C  C062  F037         	movff	main@adc_reg_val,___lwmod@dividend
   501  000670  C063  F038         	movff	main@adc_reg_val+1,___lwmod@dividend+1
   502  000674  0E00               	movlw	0
   503  000676  6E3A               	movwf	___lwmod@divisor+1,c
   504  000678  0E0A               	movlw	10
   505  00067A  6E39               	movwf	___lwmod@divisor,c
   506  00067C  EC39  F006         	call	___lwmod	;wreg free
   507  000680  5037               	movf	?___lwmod,w,c
   508  000682  0F30               	addlw	48
   509  000684  6EDF               	movwf	indf2,c
   510                           
   511                           ;main.c: 150: adc_reg_val = adc_reg_val / 10;
   512  000686  C062  F03D         	movff	main@adc_reg_val,___lwdiv@dividend
   513  00068A  C063  F03E         	movff	main@adc_reg_val+1,___lwdiv@dividend+1
   514  00068E  0E00               	movlw	0
   515  000690  6E40               	movwf	___lwdiv@divisor+1,c
   516  000692  0E0A               	movlw	10
   517  000694  6E3F               	movwf	___lwdiv@divisor,c
   518  000696  ECEF  F005         	call	___lwdiv	;wreg free
   519  00069A  C03D  F062         	movff	?___lwdiv,main@adc_reg_val
   520  00069E  C03E  F063         	movff	?___lwdiv+1,main@adc_reg_val+1
   521                           
   522                           ;main.c: 151: } while (i--);
   523  0006A2  0100               	movlb	0	; () banked
   524  0006A4  0760               	decf	main@i& (0+255),f,b
   525  0006A6  A0D8               	btfss	status,0,c
   526  0006A8  0761               	decf	(main@i+1)& (0+255),f,b
   527  0006AA  0100               	movlb	0	; () banked
   528  0006AC  2960               	incf	main@i& (0+255),w,b
   529  0006AE  E1D6               	bnz	l2316
   530  0006B0  0100               	movlb	0	; () banked
   531  0006B2  2961               	incf	(main@i+1)& (0+255),w,b
   532  0006B4  A4D8               	btfss	status,2,c
   533  0006B6  D7D2               	goto	l2316
   534                           
   535                           ; BSR set to: 0
   536                           ;main.c: 152: buff[4] = '\0';
   537                           
   538                           ; BSR set to: 0
   539  0006B8  0E00               	movlw	0
   540  0006BA  0100               	movlb	0	; () banked
   541  0006BC  6F68               	movwf	(main@buff+4)& (0+255),b
   542                           
   543                           ; BSR set to: 0
   544                           ;main.c: 153: clcd_print(buff, (0xC0 + (13)));
   545  0006BE  0E64               	movlw	low main@buff
   546  0006C0  6E39               	movwf	clcd_print@data,c
   547  0006C2  0E00               	movlw	high main@buff
   548  0006C4  6E3A               	movwf	clcd_print@data+1,c
   549  0006C6  0ECD               	movlw	205
   550  0006C8  6E3B               	movwf	clcd_print@addr,c
   551  0006CA  EC94  F005         	call	_clcd_print	;wreg free
   552                           
   553                           ;main.c: 157: get_time();
   554  0006CE  EC5C  F005         	call	_get_time	;wreg free
   555                           
   556                           ;main.c: 158: display_time();
   557  0006D2  EC53  F007         	call	_display_time	;wreg free
   558                           
   559                           ;main.c: 162: key1 = read_switches(1);
   560  0006D6  0E01               	movlw	1
   561  0006D8  EC18  F006         	call	_read_switches
   562  0006DC  0100               	movlb	0	; () banked
   563  0006DE  6F6A               	movwf	main@key1& (0+255),b
   564                           
   565                           ; BSR set to: 0
   566                           ;main.c: 164: if (key1 != 0xFF)
   567  0006E0  0100               	movlb	0	; () banked
   568  0006E2  296A               	incf	main@key1& (0+255),w,b
   569  0006E4  B4D8               	btfsc	status,2,c
   570  0006E6  D00D               	goto	l2340
   571                           
   572                           ; BSR set to: 0
   573                           ;main.c: 165: {
   574                           ;main.c: 166: key = key1;
   575  0006E8  C06A  F069         	movff	main@key1,main@key
   576                           
   577                           ; BSR set to: 0
   578                           ;main.c: 167: if(key == 1)
   579  0006EC  0100               	movlb	0	; () banked
   580  0006EE  0569               	decf	main@key& (0+255),w,b
   581  0006F0  A4D8               	btfss	status,2,c
   582  0006F2  D007               	goto	l2340
   583                           
   584                           ; BSR set to: 0
   585                           ;main.c: 168: {
   586                           ;main.c: 169: toggle = !toggle;
   587  0006F4  5014               	movf	main@toggle,w,c
   588  0006F6  A4D8               	btfss	status,2,c
   589  0006F8  D002               	goto	u1400
   590  0006FA  0E01               	movlw	1
   591  0006FC  D001               	goto	u1410
   592  0006FE                     u1400:
   593  0006FE  0E00               	movlw	0
   594  000700                     u1410:
   595  000700  6E14               	movwf	main@toggle,c
   596  000702                     l2340:
   597                           
   598                           ; BSR set to: 0
   599                           ;main.c: 170: }
   600                           ;main.c: 171: }
   601                           ;main.c: 173: if ((key == 1 || key == 2 || key == 3 || key == 4 || key == 5))
   602  000702  0100               	movlb	0	; () banked
   603  000704  0569               	decf	main@key& (0+255),w,b
   604  000706  B4D8               	btfsc	status,2,c
   605  000708  D014               	goto	l2350
   606                           
   607                           ; BSR set to: 0
   608  00070A  0E02               	movlw	2
   609  00070C  0100               	movlb	0	; () banked
   610  00070E  1969               	xorwf	main@key& (0+255),w,b
   611  000710  B4D8               	btfsc	status,2,c
   612  000712  D00F               	goto	l2350
   613                           
   614                           ; BSR set to: 0
   615  000714  0E03               	movlw	3
   616  000716  0100               	movlb	0	; () banked
   617  000718  1969               	xorwf	main@key& (0+255),w,b
   618  00071A  B4D8               	btfsc	status,2,c
   619  00071C  D00A               	goto	l2350
   620                           
   621                           ; BSR set to: 0
   622  00071E  0E04               	movlw	4
   623  000720  0100               	movlb	0	; () banked
   624  000722  1969               	xorwf	main@key& (0+255),w,b
   625  000724  B4D8               	btfsc	status,2,c
   626  000726  D005               	goto	l2350
   627                           
   628                           ; BSR set to: 0
   629  000728  0E05               	movlw	5
   630  00072A  0100               	movlb	0	; () banked
   631  00072C  1969               	xorwf	main@key& (0+255),w,b
   632  00072E  A4D8               	btfss	status,2,c
   633  000730  D77F               	goto	l2312
   634  000732                     l2350:
   635                           
   636                           ; BSR set to: 0
   637                           ;main.c: 174: {
   638                           ;main.c: 175: if(key1 == 1)
   639  000732  0100               	movlb	0	; () banked
   640  000734  056A               	decf	main@key1& (0+255),w,b
   641  000736  A4D8               	btfss	status,2,c
   642  000738  D0A0               	goto	l2414
   643                           
   644                           ; BSR set to: 0
   645                           ;main.c: 176: {
   646                           ;main.c: 177: if(toggle)
   647  00073A  5014               	movf	main@toggle,w,c
   648  00073C  B4D8               	btfsc	status,2,c
   649  00073E  D04F               	goto	l2384
   650                           
   651                           ; BSR set to: 0
   652                           ;main.c: 178: {
   653                           ;main.c: 179: clcd_print(" ON", (0xC0 + (9)));
   654  000740  0E16               	movlw	low STR_2
   655  000742  6E39               	movwf	clcd_print@data,c
   656  000744  0E06               	movlw	high STR_2
   657  000746  6E3A               	movwf	clcd_print@data+1,c
   658  000748  0EC9               	movlw	201
   659  00074A  6E3B               	movwf	clcd_print@addr,c
   660  00074C  EC94  F005         	call	_clcd_print	;wreg free
   661                           
   662                           ;main.c: 180: write_internal_eeprom(0x00, time[0]);
   663  000750  C020  F037         	movff	_time,write_internal_eeprom@data
   664  000754  0E00               	movlw	0
   665  000756  ECCE  F006         	call	_write_internal_eeprom
   666                           
   667                           ;main.c: 181: write_internal_eeprom(0x01, time[1]);
   668  00075A  C021  F037         	movff	_time+1,write_internal_eeprom@data
   669  00075E  0E01               	movlw	1
   670  000760  ECCE  F006         	call	_write_internal_eeprom
   671                           
   672                           ;main.c: 182: write_internal_eeprom(0x02, time[2]);
   673  000764  C022  F037         	movff	_time+2,write_internal_eeprom@data
   674  000768  0E02               	movlw	2
   675  00076A  ECCE  F006         	call	_write_internal_eeprom
   676                           
   677                           ;main.c: 183: write_internal_eeprom(0x03, time[3]);
   678  00076E  C023  F037         	movff	_time+3,write_internal_eeprom@data
   679  000772  0E03               	movlw	3
   680  000774  ECCE  F006         	call	_write_internal_eeprom
   681                           
   682                           ;main.c: 184: write_internal_eeprom(0x04, time[4]);
   683  000778  C024  F037         	movff	_time+4,write_internal_eeprom@data
   684  00077C  0E04               	movlw	4
   685  00077E  ECCE  F006         	call	_write_internal_eeprom
   686                           
   687                           ;main.c: 185: write_internal_eeprom(0x05, time[5]);
   688  000782  C025  F037         	movff	_time+5,write_internal_eeprom@data
   689  000786  0E05               	movlw	5
   690  000788  ECCE  F006         	call	_write_internal_eeprom
   691                           
   692                           ;main.c: 186: write_internal_eeprom(0x06, time[6]);
   693  00078C  C026  F037         	movff	_time+6,write_internal_eeprom@data
   694  000790  0E06               	movlw	6
   695  000792  ECCE  F006         	call	_write_internal_eeprom
   696                           
   697                           ;main.c: 187: write_internal_eeprom(0x07, time[7]);
   698  000796  C027  F037         	movff	_time+7,write_internal_eeprom@data
   699  00079A  0E07               	movlw	7
   700  00079C  ECCE  F006         	call	_write_internal_eeprom
   701                           
   702                           ;main.c: 188: write_internal_eeprom(0x08, 0x20);
   703  0007A0  0E20               	movlw	32
   704  0007A2  6E37               	movwf	write_internal_eeprom@data,c
   705  0007A4  0E08               	movlw	8
   706  0007A6  ECCE  F006         	call	_write_internal_eeprom
   707                           
   708                           ;main.c: 189: write_internal_eeprom(0x09, 0x4F);
   709  0007AA  0E4F               	movlw	79
   710  0007AC  6E37               	movwf	write_internal_eeprom@data,c
   711  0007AE  0E09               	movlw	9
   712  0007B0  ECCE  F006         	call	_write_internal_eeprom
   713                           
   714                           ;main.c: 190: write_internal_eeprom(0x10, 0x4E);
   715  0007B4  0E4E               	movlw	78
   716  0007B6  6E37               	movwf	write_internal_eeprom@data,c
   717  0007B8  0E10               	movlw	16
   718  0007BA  ECCE  F006         	call	_write_internal_eeprom
   719                           
   720                           ;main.c: 191: write_internal_eeprom(0x11, buff[0]);
   721  0007BE  C064  F037         	movff	main@buff,write_internal_eeprom@data
   722  0007C2  0E11               	movlw	17
   723  0007C4  ECCE  F006         	call	_write_internal_eeprom
   724                           
   725                           ;main.c: 192: write_internal_eeprom(0x12, buff[1]);
   726  0007C8  C065  F037         	movff	main@buff+1,write_internal_eeprom@data
   727  0007CC  0E12               	movlw	18
   728  0007CE  ECCE  F006         	call	_write_internal_eeprom
   729                           
   730                           ;main.c: 193: write_internal_eeprom(0x13, buff[2]);
   731  0007D2  C066  F037         	movff	main@buff+2,write_internal_eeprom@data
   732  0007D6  0E13               	movlw	19
   733  0007D8  ECCE  F006         	call	_write_internal_eeprom
   734                           
   735                           ;main.c: 196: }
   736  0007DC  D04E               	goto	l2414
   737  0007DE                     l2384:
   738                           
   739                           ;main.c: 197: else
   740                           ;main.c: 198: {
   741                           ;main.c: 199: clcd_print("OFF", (0xC0 + (9)));
   742  0007DE  0E12               	movlw	low STR_3
   743  0007E0  6E39               	movwf	clcd_print@data,c
   744  0007E2  0E06               	movlw	high STR_3
   745  0007E4  6E3A               	movwf	clcd_print@data+1,c
   746  0007E6  0EC9               	movlw	201
   747  0007E8  6E3B               	movwf	clcd_print@addr,c
   748  0007EA  EC94  F005         	call	_clcd_print	;wreg free
   749                           
   750                           ;main.c: 200: write_internal_eeprom(0x00, time[0]);
   751  0007EE  C020  F037         	movff	_time,write_internal_eeprom@data
   752  0007F2  0E00               	movlw	0
   753  0007F4  ECCE  F006         	call	_write_internal_eeprom
   754                           
   755                           ;main.c: 201: write_internal_eeprom(0x01, time[1]);
   756  0007F8  C021  F037         	movff	_time+1,write_internal_eeprom@data
   757  0007FC  0E01               	movlw	1
   758  0007FE  ECCE  F006         	call	_write_internal_eeprom
   759                           
   760                           ;main.c: 202: write_internal_eeprom(0x02, time[2]);
   761  000802  C022  F037         	movff	_time+2,write_internal_eeprom@data
   762  000806  0E02               	movlw	2
   763  000808  ECCE  F006         	call	_write_internal_eeprom
   764                           
   765                           ;main.c: 203: write_internal_eeprom(0x03, time[3]);
   766  00080C  C023  F037         	movff	_time+3,write_internal_eeprom@data
   767  000810  0E03               	movlw	3
   768  000812  ECCE  F006         	call	_write_internal_eeprom
   769                           
   770                           ;main.c: 204: write_internal_eeprom(0x04, time[4]);
   771  000816  C024  F037         	movff	_time+4,write_internal_eeprom@data
   772  00081A  0E04               	movlw	4
   773  00081C  ECCE  F006         	call	_write_internal_eeprom
   774                           
   775                           ;main.c: 205: write_internal_eeprom(0x05, time[5]);
   776  000820  C025  F037         	movff	_time+5,write_internal_eeprom@data
   777  000824  0E05               	movlw	5
   778  000826  ECCE  F006         	call	_write_internal_eeprom
   779                           
   780                           ;main.c: 206: write_internal_eeprom(0x06, time[6]);
   781  00082A  C026  F037         	movff	_time+6,write_internal_eeprom@data
   782  00082E  0E06               	movlw	6
   783  000830  ECCE  F006         	call	_write_internal_eeprom
   784                           
   785                           ;main.c: 207: write_internal_eeprom(0x07, time[7]);
   786  000834  C027  F037         	movff	_time+7,write_internal_eeprom@data
   787  000838  0E07               	movlw	7
   788  00083A  ECCE  F006         	call	_write_internal_eeprom
   789                           
   790                           ;main.c: 208: write_internal_eeprom(0x08, 0x4F);
   791  00083E  0E4F               	movlw	79
   792  000840  6E37               	movwf	write_internal_eeprom@data,c
   793  000842  0E08               	movlw	8
   794  000844  ECCE  F006         	call	_write_internal_eeprom
   795                           
   796                           ;main.c: 209: write_internal_eeprom(0x09, 0x46);
   797  000848  0E46               	movlw	70
   798  00084A  6E37               	movwf	write_internal_eeprom@data,c
   799  00084C  0E09               	movlw	9
   800  00084E  ECCE  F006         	call	_write_internal_eeprom
   801                           
   802                           ;main.c: 210: write_internal_eeprom(0x10, 0x46);
   803  000852  0E46               	movlw	70
   804  000854  6E37               	movwf	write_internal_eeprom@data,c
   805  000856  0E10               	movlw	16
   806  000858  ECCE  F006         	call	_write_internal_eeprom
   807                           
   808                           ;main.c: 211: write_internal_eeprom(0x11, buff[0]);
   809  00085C  C064  F037         	movff	main@buff,write_internal_eeprom@data
   810  000860  0E11               	movlw	17
   811  000862  ECCE  F006         	call	_write_internal_eeprom
   812                           
   813                           ;main.c: 212: write_internal_eeprom(0x12, buff[1]);
   814  000866  C065  F037         	movff	main@buff+1,write_internal_eeprom@data
   815  00086A  0E12               	movlw	18
   816  00086C  ECCE  F006         	call	_write_internal_eeprom
   817                           
   818                           ;main.c: 213: write_internal_eeprom(0x13, buff[2]);
   819  000870  C066  F037         	movff	main@buff+2,write_internal_eeprom@data
   820  000874  0E13               	movlw	19
   821  000876  ECCE  F006         	call	_write_internal_eeprom
   822  00087A                     l2414:
   823                           
   824                           ;main.c: 214: }
   825                           ;main.c: 216: }
   826                           ;main.c: 217: if(key1 == 2 || key1 == 3)
   827  00087A  0E02               	movlw	2
   828  00087C  0100               	movlb	0	; () banked
   829  00087E  196A               	xorwf	main@key1& (0+255),w,b
   830  000880  B4D8               	btfsc	status,2,c
   831  000882  D005               	goto	l2418
   832                           
   833                           ; BSR set to: 0
   834  000884  0E03               	movlw	3
   835  000886  0100               	movlb	0	; () banked
   836  000888  196A               	xorwf	main@key1& (0+255),w,b
   837  00088A  A4D8               	btfss	status,2,c
   838  00088C  D02B               	goto	l2438
   839  00088E                     l2418:
   840                           
   841                           ; BSR set to: 0
   842                           ;main.c: 218: {
   843                           ;main.c: 219: clcd_putch('G', (0xC0 + (10)));
   844  00088E  0ECA               	movlw	202
   845  000890  6E39               	movwf	clcd_putch@addr,c
   846  000892  0E47               	movlw	71
   847  000894  EC21  F007         	call	_clcd_putch
   848                           
   849                           ;main.c: 220: clcd_putch(z + 48, (0xC0 + (11)));
   850  000898  0ECB               	movlw	203
   851  00089A  6E39               	movwf	clcd_putch@addr,c
   852  00089C  5044               	movf	main@z,w,c
   853  00089E  0F30               	addlw	48
   854  0008A0  EC21  F007         	call	_clcd_putch
   855                           
   856                           ;main.c: 221: if(key1 == 2)
   857  0008A4  0E02               	movlw	2
   858  0008A6  0100               	movlb	0	; () banked
   859  0008A8  196A               	xorwf	main@key1& (0+255),w,b
   860  0008AA  A4D8               	btfss	status,2,c
   861  0008AC  D00B               	goto	l2430
   862                           
   863                           ; BSR set to: 0
   864                           ;main.c: 222: {
   865                           ;main.c: 223: z++;
   866  0008AE  4A44               	infsnz	main@z,f,c
   867  0008B0  2A45               	incf	main@z+1,f,c
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 224: if(z == 5)
   871  0008B2  0E05               	movlw	5
   872  0008B4  1844               	xorwf	main@z,w,c
   873  0008B6  1045               	iorwf	main@z+1,w,c
   874  0008B8  A4D8               	btfss	status,2,c
   875  0008BA  D014               	goto	l2438
   876                           
   877                           ; BSR set to: 0
   878                           ;main.c: 225: {
   879                           ;main.c: 226: z = 1;
   880  0008BC  0E00               	movlw	0
   881  0008BE  6E45               	movwf	main@z+1,c
   882  0008C0  0E01               	movlw	1
   883  0008C2  D00F               	goto	L1
   884  0008C4                     l2430:
   885                           
   886                           ; BSR set to: 0
   887                           ;main.c: 229: else if(key1 == 3)
   888  0008C4  0E03               	movlw	3
   889  0008C6  0100               	movlb	0	; () banked
   890  0008C8  196A               	xorwf	main@key1& (0+255),w,b
   891  0008CA  A4D8               	btfss	status,2,c
   892  0008CC  D00B               	goto	l2438
   893                           
   894                           ; BSR set to: 0
   895                           ;main.c: 230: {
   896                           ;main.c: 231: z--;
   897  0008CE  0644               	decf	main@z,f,c
   898  0008D0  A0D8               	btfss	status,0,c
   899  0008D2  0645               	decf	main@z+1,f,c
   900                           
   901                           ; BSR set to: 0
   902                           ;main.c: 232: if(z == 0)
   903  0008D4  5044               	movf	main@z,w,c
   904  0008D6  1045               	iorwf	main@z+1,w,c
   905  0008D8  A4D8               	btfss	status,2,c
   906  0008DA  D004               	goto	l2438
   907                           
   908                           ; BSR set to: 0
   909                           ;main.c: 233: {
   910                           ;main.c: 234: z = 4;
   911  0008DC  0E00               	movlw	0
   912  0008DE  6E45               	movwf	main@z+1,c
   913  0008E0  0E04               	movlw	4
   914  0008E2                     L1:
   915  0008E2  6E44               	movwf	main@z,c
   916  0008E4                     l2438:
   917                           
   918                           ; BSR set to: 0
   919                           ;main.c: 235: }
   920                           ;main.c: 236: }
   921                           ;main.c: 237: }
   922                           ;main.c: 238: if(key == 4)
   923  0008E4  0E04               	movlw	4
   924  0008E6  0100               	movlb	0	; () banked
   925  0008E8  1969               	xorwf	main@key& (0+255),w,b
   926  0008EA  A4D8               	btfss	status,2,c
   927  0008EC  D6A1               	goto	l2312
   928                           
   929                           ; BSR set to: 0
   930                           ;main.c: 239: {
   931                           ;main.c: 240: clcd_write(0x01, 0);
   932  0008EE  0E00               	movlw	0
   933  0008F0  6E37               	movwf	clcd_write@control_bit,c
   934  0008F2  0E01               	movlw	1
   935  0008F4  ECBA  F006         	call	_clcd_write
   936                           
   937                           ;main.c: 245: time[0] = read_internal_eeprom(0x00);
   938  0008F8  0E00               	movlw	0
   939  0008FA  EC38  F007         	call	_read_internal_eeprom
   940  0008FE  6E20               	movwf	_time,c
   941                           
   942                           ;main.c: 246: time[1] = read_internal_eeprom(0x01);
   943  000900  0E01               	movlw	1
   944  000902  EC38  F007         	call	_read_internal_eeprom
   945  000906  6E21               	movwf	_time+1,c
   946                           
   947                           ;main.c: 247: time[2] = read_internal_eeprom(0x02);
   948  000908  0E02               	movlw	2
   949  00090A  EC38  F007         	call	_read_internal_eeprom
   950  00090E  6E22               	movwf	_time+2,c
   951                           
   952                           ;main.c: 248: time[3] = read_internal_eeprom(0x03);
   953  000910  0E03               	movlw	3
   954  000912  EC38  F007         	call	_read_internal_eeprom
   955  000916  6E23               	movwf	_time+3,c
   956                           
   957                           ;main.c: 249: time[4] = read_internal_eeprom(0x04);
   958  000918  0E04               	movlw	4
   959  00091A  EC38  F007         	call	_read_internal_eeprom
   960  00091E  6E24               	movwf	_time+4,c
   961                           
   962                           ;main.c: 250: time[5] = read_internal_eeprom(0x05);
   963  000920  0E05               	movlw	5
   964  000922  EC38  F007         	call	_read_internal_eeprom
   965  000926  6E25               	movwf	_time+5,c
   966                           
   967                           ;main.c: 251: time[6] = read_internal_eeprom(0x06);
   968  000928  0E06               	movlw	6
   969  00092A  EC38  F007         	call	_read_internal_eeprom
   970  00092E  6E26               	movwf	_time+6,c
   971                           
   972                           ;main.c: 252: time[7] = read_internal_eeprom(0x07);
   973  000930  0E07               	movlw	7
   974  000932  EC38  F007         	call	_read_internal_eeprom
   975  000936  6E27               	movwf	_time+7,c
   976                           
   977                           ;main.c: 253: clcd_putch(read_internal_eeprom(0x08), (0xC0 + (9)));
   978  000938  0EC9               	movlw	201
   979  00093A  6E39               	movwf	clcd_putch@addr,c
   980  00093C  0E08               	movlw	8
   981  00093E  EC38  F007         	call	_read_internal_eeprom
   982  000942  EC21  F007         	call	_clcd_putch
   983                           
   984                           ;main.c: 254: clcd_putch(read_internal_eeprom(0x09), (0xC0 + (10)));
   985  000946  0ECA               	movlw	202
   986  000948  6E39               	movwf	clcd_putch@addr,c
   987  00094A  0E09               	movlw	9
   988  00094C  EC38  F007         	call	_read_internal_eeprom
   989  000950  EC21  F007         	call	_clcd_putch
   990                           
   991                           ;main.c: 255: clcd_putch(read_internal_eeprom(0x10), (0xC0 + (11)));
   992  000954  0ECB               	movlw	203
   993  000956  6E39               	movwf	clcd_putch@addr,c
   994  000958  0E10               	movlw	16
   995  00095A  EC38  F007         	call	_read_internal_eeprom
   996  00095E  EC21  F007         	call	_clcd_putch
   997                           
   998                           ;main.c: 256: buff[0] = read_internal_eeprom(0x11);
   999  000962  0E11               	movlw	17
  1000  000964  EC38  F007         	call	_read_internal_eeprom
  1001  000968  0100               	movlb	0	; () banked
  1002  00096A  6F64               	movwf	main@buff& (0+255),b
  1003                           
  1004                           ;main.c: 257: buff[1] = read_internal_eeprom(0x12);
  1005  00096C  0E12               	movlw	18
  1006  00096E  EC38  F007         	call	_read_internal_eeprom
  1007  000972  0100               	movlb	0	; () banked
  1008  000974  6F65               	movwf	(main@buff+1)& (0+255),b
  1009                           
  1010                           ;main.c: 258: buff[2] = read_internal_eeprom(0x13);
  1011  000976  0E13               	movlw	19
  1012  000978  EC38  F007         	call	_read_internal_eeprom
  1013  00097C  0100               	movlb	0	; () banked
  1014  00097E  6F66               	movwf	(main@buff+2)& (0+255),b
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;main.c: 260: clcd_print(time, (0xC0 + (0)));
  1018  000980  0E20               	movlw	low _time
  1019  000982  6E39               	movwf	clcd_print@data,c
  1020  000984  0E00               	movlw	high _time
  1021  000986  6E3A               	movwf	clcd_print@data+1,c
  1022  000988  0EC0               	movlw	192
  1023  00098A  6E3B               	movwf	clcd_print@addr,c
  1024  00098C  EC94  F005         	call	_clcd_print	;wreg free
  1025                           
  1026                           ;main.c: 261: clcd_print(buff, (0xC0 + (13)));
  1027  000990  0E64               	movlw	low main@buff
  1028  000992  6E39               	movwf	clcd_print@data,c
  1029  000994  0E00               	movlw	high main@buff
  1030  000996  6E3A               	movwf	clcd_print@data+1,c
  1031  000998  0ECD               	movlw	205
  1032  00099A  6E3B               	movwf	clcd_print@addr,c
  1033  00099C  EC94  F005         	call	_clcd_print	;wreg free
  1034  0009A0  D647               	goto	l2312
  1035  0009A2                     __end_of_main:
  1036                           	opt stack 0
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           postinc0	equ	0xFEE
  1042                           wreg	equ	0xFE8
  1043                           indf2	equ	0xFDF
  1044                           fsr2h	equ	0xFDA
  1045                           fsr2l	equ	0xFD9
  1046                           status	equ	0xFD8
  1047                           
  1048 ;; *************** function _write_internal_eeprom *****************
  1049 ;; Defined at:
  1050 ;;		line 3 in file "eeprom.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  address         1    wreg     unsigned char 
  1053 ;;  data            1   14[COMRAM] unsigned char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  address         1   15[COMRAM] unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1065 ;;      Params:         1       0       0       0       0       0       0
  1066 ;;      Locals:         1       0       0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0
  1068 ;;      Totals:         2       0       0       0       0       0       0
  1069 ;;Total ram usage:        2 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text1
  1080  000D9C                     __ptext1:
  1081                           	opt stack 0
  1082  000D9C                     _write_internal_eeprom:
  1083                           	opt stack 29
  1084                           
  1085                           ;incstack = 0
  1086                           ;write_internal_eeprom@address stored from wreg
  1087  000D9C  6E38               	movwf	write_internal_eeprom@address,c
  1088                           
  1089                           ;eeprom.c: 6: EEADR = address;
  1090  000D9E  C038  FFA9         	movff	write_internal_eeprom@address,4009	;volatile
  1091                           
  1092                           ;eeprom.c: 9: EEDATA = data;
  1093  000DA2  C037  FFA8         	movff	write_internal_eeprom@data,4008	;volatile
  1094                           
  1095                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  1096  000DA6  9EA6               	bcf	4006,7,c	;volatile
  1097                           
  1098                           ;eeprom.c: 15: EECON1bits.CFGS = 0;
  1099  000DA8  9CA6               	bcf	4006,6,c	;volatile
  1100                           
  1101                           ;eeprom.c: 18: EECON1bits.WREN = 1;
  1102  000DAA  84A6               	bsf	4006,2,c	;volatile
  1103                           
  1104                           ;eeprom.c: 21: GIE = 0;
  1105  000DAC  9EF2               	bcf	intcon,7,c	;volatile
  1106                           
  1107                           ;eeprom.c: 24: EECON2 = 0x55;
  1108  000DAE  0E55               	movlw	85
  1109  000DB0  6EA7               	movwf	4007,c	;volatile
  1110                           
  1111                           ;eeprom.c: 25: EECON2 = 0xAA;
  1112  000DB2  0EAA               	movlw	170
  1113  000DB4  6EA7               	movwf	4007,c	;volatile
  1114                           
  1115                           ;eeprom.c: 28: EECON1bits.WR = 1;
  1116  000DB6  82A6               	bsf	4006,1,c	;volatile
  1117                           
  1118                           ;eeprom.c: 31: GIE = 1;
  1119  000DB8  8EF2               	bsf	intcon,7,c	;volatile
  1120  000DBA                     l256:
  1121  000DBA  A8A1               	btfss	4001,4,c	;volatile
  1122  000DBC  D7FE               	goto	l256
  1123                           
  1124                           ;eeprom.c: 37: PIR2bits.EEIF = 0;
  1125  000DBE  98A1               	bcf	4001,4,c	;volatile
  1126  000DC0  0012               	return		;funcret
  1127  000DC2                     __end_of_write_internal_eeprom:
  1128                           	opt stack 0
  1129                           tblptru	equ	0xFF8
  1130                           tblptrh	equ	0xFF7
  1131                           tblptrl	equ	0xFF6
  1132                           tablat	equ	0xFF5
  1133                           intcon	equ	0xFF2
  1134                           postinc0	equ	0xFEE
  1135                           wreg	equ	0xFE8
  1136                           indf2	equ	0xFDF
  1137                           fsr2h	equ	0xFDA
  1138                           fsr2l	equ	0xFD9
  1139                           status	equ	0xFD8
  1140                           
  1141 ;; *************** function _read_switches *****************
  1142 ;; Defined at:
  1143 ;;		line 88 in file "matrix_keypad.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  detection_ty    1    wreg     unsigned char 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  detection_ty    1   15[COMRAM] unsigned char 
  1148 ;;  key             1   16[COMRAM] unsigned char 
  1149 ;;  key1            1   14[COMRAM] unsigned char 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      unsigned char 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, status,0, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1159 ;;      Params:         0       0       0       0       0       0       0
  1160 ;;      Locals:         3       0       0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0
  1162 ;;      Totals:         3       0       0       0       0       0       0
  1163 ;;Total ram usage:        3 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    2
  1166 ;; This function calls:
  1167 ;;		_scan_key
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text2
  1174  000C30                     __ptext2:
  1175                           	opt stack 0
  1176  000C30                     _read_switches:
  1177                           	opt stack 28
  1178                           
  1179                           ;incstack = 0
  1180                           ;read_switches@detection_type stored from wreg
  1181  000C30  6E38               	movwf	read_switches@detection_type,c
  1182                           
  1183                           ;matrix_keypad.c: 90: static unsigned char once = 1;
  1184                           ;matrix_keypad.c: 91: char key, key1;
  1185                           ;matrix_keypad.c: 93: if (detection_type == 1)
  1186  000C32  0438               	decf	read_switches@detection_type,w,c
  1187  000C34  A4D8               	btfss	status,2,c
  1188  000C36  D015               	goto	l2150
  1189                           
  1190                           ;matrix_keypad.c: 94: {
  1191                           ;matrix_keypad.c: 95: key = scan_key() ;
  1192  000C38  EC20  F005         	call	_scan_key	;wreg free
  1193  000C3C  6E39               	movwf	read_switches@key,c
  1194                           
  1195                           ;matrix_keypad.c: 96: if (key != 0xFF && once)
  1196  000C3E  2839               	incf	read_switches@key,w,c
  1197  000C40  B4D8               	btfsc	status,2,c
  1198  000C42  D009               	goto	l2146
  1199  000C44  5046               	movf	read_switches@once,w,c
  1200  000C46  B4D8               	btfsc	status,2,c
  1201  000C48  D006               	goto	l2146
  1202                           
  1203                           ;matrix_keypad.c: 97: {
  1204                           ;matrix_keypad.c: 98: key1 = key;
  1205  000C4A  C039  F037         	movff	read_switches@key,read_switches@key1
  1206                           
  1207                           ;matrix_keypad.c: 99: once = 0;
  1208  000C4E  0E00               	movlw	0
  1209  000C50  6E46               	movwf	read_switches@once,c
  1210                           
  1211                           ;matrix_keypad.c: 100: return key1;
  1212  000C52  5037               	movf	read_switches@key1,w,c
  1213  000C54  0012               	return	
  1214  000C56                     l2146:
  1215                           
  1216                           ;matrix_keypad.c: 102: else if(key == 0xFF)
  1217  000C56  2839               	incf	read_switches@key,w,c
  1218  000C58  A4D8               	btfss	status,2,c
  1219  000C5A  D009               	goto	l2156
  1220                           
  1221                           ;matrix_keypad.c: 103: {
  1222                           ;matrix_keypad.c: 104: once = 1;
  1223  000C5C  0E01               	movlw	1
  1224  000C5E  6E46               	movwf	read_switches@once,c
  1225                           
  1226                           ;matrix_keypad.c: 105: }
  1227                           ;matrix_keypad.c: 106: }
  1228  000C60  D006               	goto	l2156
  1229  000C62                     l2150:
  1230                           
  1231                           ;matrix_keypad.c: 107: else if (detection_type == 0)
  1232  000C62  5038               	movf	read_switches@detection_type,w,c
  1233  000C64  A4D8               	btfss	status,2,c
  1234  000C66  D003               	goto	l2156
  1235                           
  1236                           ;matrix_keypad.c: 108: {
  1237                           ;matrix_keypad.c: 109: return scan_key();
  1238  000C68  EC20  F005         	call	_scan_key	;wreg free
  1239  000C6C  0012               	return	
  1240  000C6E                     l2156:
  1241                           
  1242                           ;matrix_keypad.c: 110: }
  1243                           ;matrix_keypad.c: 112: return 0xFF;
  1244  000C6E  0EFF               	movlw	255
  1245  000C70  0012               	return	
  1246  000C72                     __end_of_read_switches:
  1247                           	opt stack 0
  1248                           tblptru	equ	0xFF8
  1249                           tblptrh	equ	0xFF7
  1250                           tblptrl	equ	0xFF6
  1251                           tablat	equ	0xFF5
  1252                           intcon	equ	0xFF2
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           indf2	equ	0xFDF
  1256                           fsr2h	equ	0xFDA
  1257                           fsr2l	equ	0xFD9
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function _scan_key *****************
  1261 ;; Defined at:
  1262 ;;		line 18 in file "matrix_keypad.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      unsigned char 
  1269 ;; Registers used:
  1270 ;;		wreg
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1276 ;;      Params:         0       0       0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0
  1279 ;;      Totals:         0       0       0       0       0       0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    1
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_read_switches
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text3
  1291  000A40                     __ptext3:
  1292                           	opt stack 0
  1293  000A40                     _scan_key:
  1294                           	opt stack 28
  1295                           
  1296                           ;matrix_keypad.c: 20: PORTBbits.RB5 = 0;
  1297                           
  1298                           ;incstack = 0
  1299  000A40  9A81               	bcf	3969,5,c	;volatile
  1300                           
  1301                           ;matrix_keypad.c: 21: PORTBbits.RB6 = 1;
  1302  000A42  8C81               	bsf	3969,6,c	;volatile
  1303                           
  1304                           ;matrix_keypad.c: 22: PORTBbits.RB7 = 1;
  1305  000A44  8E81               	bsf	3969,7,c	;volatile
  1306                           
  1307                           ;matrix_keypad.c: 24: if (PORTBbits.RB1 == 0)
  1308  000A46  B281               	btfsc	3969,1,c	;volatile
  1309  000A48  D002               	goto	l77
  1310                           
  1311                           ;matrix_keypad.c: 25: {
  1312                           ;matrix_keypad.c: 26: return 1;
  1313  000A4A  0E01               	movlw	1
  1314  000A4C  0012               	return	
  1315  000A4E                     l77:
  1316                           
  1317                           ;matrix_keypad.c: 28: else if (PORTBbits.RB2 == 0)
  1318  000A4E  B481               	btfsc	3969,2,c	;volatile
  1319  000A50  D002               	goto	l80
  1320                           
  1321                           ;matrix_keypad.c: 29: {
  1322                           ;matrix_keypad.c: 30: return 4;
  1323  000A52  0E04               	movlw	4
  1324  000A54  0012               	return	
  1325  000A56                     l80:
  1326                           
  1327                           ;matrix_keypad.c: 32: else if (PORTBbits.RB3 == 0)
  1328  000A56  B681               	btfsc	3969,3,c	;volatile
  1329  000A58  D002               	goto	l82
  1330                           
  1331                           ;matrix_keypad.c: 33: {
  1332                           ;matrix_keypad.c: 34: return 7;
  1333  000A5A  0E07               	movlw	7
  1334  000A5C  0012               	return	
  1335  000A5E                     l82:
  1336                           
  1337                           ;matrix_keypad.c: 36: else if (PORTBbits.RB4 == 0)
  1338  000A5E  B881               	btfsc	3969,4,c	;volatile
  1339  000A60  D002               	goto	l79
  1340                           
  1341                           ;matrix_keypad.c: 37: {
  1342                           ;matrix_keypad.c: 38: return 10;
  1343  000A62  0E0A               	movlw	10
  1344  000A64  0012               	return	
  1345  000A66                     l79:
  1346                           
  1347                           ;matrix_keypad.c: 39: }
  1348                           ;matrix_keypad.c: 41: PORTBbits.RB5 = 1;
  1349  000A66  8A81               	bsf	3969,5,c	;volatile
  1350                           
  1351                           ;matrix_keypad.c: 42: PORTBbits.RB6 = 0;
  1352  000A68  9C81               	bcf	3969,6,c	;volatile
  1353                           
  1354                           ;matrix_keypad.c: 43: PORTBbits.RB7 = 1;
  1355  000A6A  8E81               	bsf	3969,7,c	;volatile
  1356                           
  1357                           ;matrix_keypad.c: 45: if (PORTBbits.RB1 == 0)
  1358  000A6C  B281               	btfsc	3969,1,c	;volatile
  1359  000A6E  D002               	goto	l85
  1360                           
  1361                           ;matrix_keypad.c: 46: {
  1362                           ;matrix_keypad.c: 47: return 2;
  1363  000A70  0E02               	movlw	2
  1364  000A72  0012               	return	
  1365  000A74                     l85:
  1366                           
  1367                           ;matrix_keypad.c: 49: else if (PORTBbits.RB2 == 0)
  1368  000A74  B481               	btfsc	3969,2,c	;volatile
  1369  000A76  D002               	goto	l87
  1370                           
  1371                           ;matrix_keypad.c: 50: {
  1372                           ;matrix_keypad.c: 51: return 5;
  1373  000A78  0E05               	movlw	5
  1374  000A7A  0012               	return	
  1375  000A7C                     l87:
  1376                           
  1377                           ;matrix_keypad.c: 53: else if (PORTBbits.RB3 == 0)
  1378  000A7C  B681               	btfsc	3969,3,c	;volatile
  1379  000A7E  D002               	goto	l89
  1380                           
  1381                           ;matrix_keypad.c: 54: {
  1382                           ;matrix_keypad.c: 55: return 8;
  1383  000A80  0E08               	movlw	8
  1384  000A82  0012               	return	
  1385  000A84                     l89:
  1386                           
  1387                           ;matrix_keypad.c: 57: else if (PORTBbits.RB4 == 0)
  1388  000A84  B881               	btfsc	3969,4,c	;volatile
  1389  000A86  D002               	goto	l86
  1390                           
  1391                           ;matrix_keypad.c: 58: {
  1392                           ;matrix_keypad.c: 59: return 11;
  1393  000A88  0E0B               	movlw	11
  1394  000A8A  0012               	return	
  1395  000A8C                     l86:
  1396                           
  1397                           ;matrix_keypad.c: 60: }
  1398                           ;matrix_keypad.c: 62: PORTBbits.RB5 = 1;
  1399  000A8C  8A81               	bsf	3969,5,c	;volatile
  1400                           
  1401                           ;matrix_keypad.c: 63: PORTBbits.RB6 = 1;
  1402  000A8E  8C81               	bsf	3969,6,c	;volatile
  1403                           
  1404                           ;matrix_keypad.c: 64: PORTBbits.RB7 = 0;
  1405  000A90  9E81               	bcf	3969,7,c	;volatile
  1406                           
  1407                           ;matrix_keypad.c: 66: PORTBbits.RB7 = 0;
  1408  000A92  9E81               	bcf	3969,7,c	;volatile
  1409                           
  1410                           ;matrix_keypad.c: 68: if (PORTBbits.RB1 == 0)
  1411  000A94  B281               	btfsc	3969,1,c	;volatile
  1412  000A96  D002               	goto	l92
  1413                           
  1414                           ;matrix_keypad.c: 69: {
  1415                           ;matrix_keypad.c: 70: return 3;
  1416  000A98  0E03               	movlw	3
  1417  000A9A  0012               	return	
  1418  000A9C                     l92:
  1419                           
  1420                           ;matrix_keypad.c: 72: else if (PORTBbits.RB2 == 0)
  1421  000A9C  B481               	btfsc	3969,2,c	;volatile
  1422  000A9E  D002               	goto	l94
  1423                           
  1424                           ;matrix_keypad.c: 73: {
  1425                           ;matrix_keypad.c: 74: return 6;
  1426  000AA0  0E06               	movlw	6
  1427  000AA2  0012               	return	
  1428  000AA4                     l94:
  1429                           
  1430                           ;matrix_keypad.c: 76: else if (PORTBbits.RB3 == 0)
  1431  000AA4  B681               	btfsc	3969,3,c	;volatile
  1432  000AA6  D002               	goto	l96
  1433                           
  1434                           ;matrix_keypad.c: 77: {
  1435                           ;matrix_keypad.c: 78: return 9;
  1436  000AA8  0E09               	movlw	9
  1437  000AAA  0012               	return	
  1438  000AAC                     l96:
  1439                           
  1440                           ;matrix_keypad.c: 80: else if (PORTBbits.RB4 == 0)
  1441  000AAC  B881               	btfsc	3969,4,c	;volatile
  1442  000AAE  D002               	goto	l2098
  1443                           
  1444                           ;matrix_keypad.c: 81: {
  1445                           ;matrix_keypad.c: 82: return 12;
  1446  000AB0  0E0C               	movlw	12
  1447  000AB2  0012               	return	
  1448  000AB4                     l2098:
  1449                           
  1450                           ;matrix_keypad.c: 83: }
  1451                           ;matrix_keypad.c: 85: return 0xFF;
  1452  000AB4  0EFF               	movlw	255
  1453  000AB6  0012               	return	
  1454  000AB8                     __end_of_scan_key:
  1455                           	opt stack 0
  1456                           tblptru	equ	0xFF8
  1457                           tblptrh	equ	0xFF7
  1458                           tblptrl	equ	0xFF6
  1459                           tablat	equ	0xFF5
  1460                           intcon	equ	0xFF2
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           indf2	equ	0xFDF
  1464                           fsr2h	equ	0xFDA
  1465                           fsr2l	equ	0xFD9
  1466                           status	equ	0xFD8
  1467                           
  1468 ;; *************** function _read_internal_eeprom *****************
  1469 ;; Defined at:
  1470 ;;		line 40 in file "eeprom.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  address         1    wreg     unsigned char 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  address         1   14[COMRAM] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      unsigned char 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1484 ;;      Params:         0       0       0       0       0       0       0
  1485 ;;      Locals:         1       0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0
  1487 ;;      Totals:         1       0       0       0       0       0       0
  1488 ;;Total ram usage:        1 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text4
  1499  000E70                     __ptext4:
  1500                           	opt stack 0
  1501  000E70                     _read_internal_eeprom:
  1502                           	opt stack 29
  1503                           
  1504                           ;incstack = 0
  1505                           ;read_internal_eeprom@address stored from wreg
  1506  000E70  6E37               	movwf	read_internal_eeprom@address,c
  1507                           
  1508                           ;eeprom.c: 43: EEADR = address;
  1509  000E72  C037  FFA9         	movff	read_internal_eeprom@address,4009	;volatile
  1510                           
  1511                           ;eeprom.c: 46: EECON1bits.WREN = 0;
  1512  000E76  94A6               	bcf	4006,2,c	;volatile
  1513                           
  1514                           ;eeprom.c: 49: EECON1bits.EEPGD = 0;
  1515  000E78  9EA6               	bcf	4006,7,c	;volatile
  1516                           
  1517                           ;eeprom.c: 52: EECON1bits.CFGS = 0;
  1518  000E7A  9CA6               	bcf	4006,6,c	;volatile
  1519                           
  1520                           ;eeprom.c: 55: EECON1bits.RD = 1;
  1521  000E7C  80A6               	bsf	4006,0,c	;volatile
  1522                           
  1523                           ;eeprom.c: 58: return EEDATA;
  1524  000E7E  50A8               	movf	4008,w,c	;volatile
  1525  000E80  0012               	return	
  1526  000E82                     __end_of_read_internal_eeprom:
  1527                           	opt stack 0
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           intcon	equ	0xFF2
  1533                           postinc0	equ	0xFEE
  1534                           wreg	equ	0xFE8
  1535                           indf2	equ	0xFDF
  1536                           fsr2h	equ	0xFDA
  1537                           fsr2l	equ	0xFD9
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function _read_adc *****************
  1541 ;; Defined at:
  1542 ;;		line 47 in file "adc.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  channel         1    wreg     unsigned char 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  channel         1    0[COMRAM] unsigned char 
  1547 ;;  reg_val         2   18[COMRAM] unsigned short 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2   14[COMRAM] unsigned short 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1557 ;;      Params:         2       0       0       0       0       0       0
  1558 ;;      Locals:         2       0       0       0       0       0       0
  1559 ;;      Temps:          2       0       0       0       0       0       0
  1560 ;;      Totals:         6       0       0       0       0       0       0
  1561 ;;Total ram usage:        6 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    1
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text5
  1572  000DC2                     __ptext5:
  1573                           	opt stack 0
  1574  000DC2                     _read_adc:
  1575                           	opt stack 29
  1576                           
  1577                           ;adc.c: 49: unsigned short reg_val;
  1578                           ;adc.c: 52: GO = 1;
  1579                           
  1580                           ;incstack = 0
  1581  000DC2  82C2               	bsf	4034,1,c	;volatile
  1582  000DC4                     l433:
  1583  000DC4  B2C2               	btfsc	4034,1,c	;volatile
  1584  000DC6  D7FE               	goto	l433
  1585                           
  1586                           ;adc.c: 54: reg_val = (ADRESH << 8) | ADRESL;
  1587  000DC8  50C3               	movf	4035,w,c	;volatile
  1588  000DCA  CFC4 F039          	movff	4036,??_read_adc	;volatile
  1589  000DCE  6A3A               	clrf	(??_read_adc+1)& (0+255),c
  1590  000DD0  C039  F03A         	movff	??_read_adc,??_read_adc+1
  1591  000DD4  6A39               	clrf	??_read_adc,c
  1592  000DD6  1039               	iorwf	??_read_adc,w,c
  1593  000DD8  6E3B               	movwf	read_adc@reg_val,c
  1594  000DDA  503A               	movf	??_read_adc+1,w,c
  1595  000DDC  6E3C               	movwf	read_adc@reg_val+1,c
  1596                           
  1597                           ;adc.c: 56: return reg_val;
  1598  000DDE  C03B  F037         	movff	read_adc@reg_val,?_read_adc
  1599  000DE2  C03C  F038         	movff	read_adc@reg_val+1,?_read_adc+1
  1600  000DE6  0012               	return	
  1601  000DE8                     __end_of_read_adc:
  1602                           	opt stack 0
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           intcon	equ	0xFF2
  1608                           postinc0	equ	0xFEE
  1609                           wreg	equ	0xFE8
  1610                           indf2	equ	0xFDF
  1611                           fsr2h	equ	0xFDA
  1612                           fsr2l	equ	0xFD9
  1613                           status	equ	0xFD8
  1614                           
  1615 ;; *************** function _init_config *****************
  1616 ;; Defined at:
  1617 ;;		line 85 in file "main.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1631 ;;      Params:         0       0       0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0
  1634 ;;      Totals:         0       0       0       0       0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    6
  1638 ;; This function calls:
  1639 ;;		_init_adc
  1640 ;;		_init_clcd
  1641 ;;		_init_ds1307
  1642 ;;		_init_i2c
  1643 ;;		_init_i2c_config
  1644 ;;		_init_matrix_keypad
  1645 ;;		_init_timer0
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text6
  1652  000DE8                     __ptext6:
  1653                           	opt stack 0
  1654  000DE8                     _init_config:
  1655                           	opt stack 24
  1656                           
  1657                           ;main.c: 88: PORTB = 0x00;
  1658                           
  1659                           ;incstack = 0
  1660  000DE8  0E00               	movlw	0
  1661  000DEA  6E81               	movwf	3969,c	;volatile
  1662                           
  1663                           ;main.c: 90: GIE = 1;
  1664  000DEC  8EF2               	bsf	intcon,7,c	;volatile
  1665                           
  1666                           ;main.c: 92: init_clcd();
  1667  000DEE  EC76  F006         	call	_init_clcd	;wreg free
  1668                           
  1669                           ;main.c: 93: init_i2c();
  1670  000DF2  EC2D  F007         	call	_init_i2c	;wreg free
  1671                           
  1672                           ;main.c: 94: init_ds1307();
  1673  000DF6  ECC4  F005         	call	_init_ds1307	;wreg free
  1674                           
  1675                           ;main.c: 95: init_timer0();
  1676  000DFA  EC15  F007         	call	_init_timer0	;wreg free
  1677                           
  1678                           ;main.c: 96: init_matrix_keypad();
  1679  000DFE  EC41  F007         	call	_init_matrix_keypad	;wreg free
  1680                           
  1681                           ;main.c: 97: init_adc();
  1682  000E02  ECA6  F006         	call	_init_adc	;wreg free
  1683                           
  1684                           ;main.c: 98: init_i2c_config();
  1685  000E06  EC4A  F007         	call	_init_i2c_config	;wreg free
  1686  000E0A  0012               	return		;funcret
  1687  000E0C                     __end_of_init_config:
  1688                           	opt stack 0
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           intcon	equ	0xFF2
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           indf2	equ	0xFDF
  1697                           fsr2h	equ	0xFDA
  1698                           fsr2l	equ	0xFD9
  1699                           status	equ	0xFD8
  1700                           
  1701 ;; *************** function _init_timer0 *****************
  1702 ;; Defined at:
  1703 ;;		line 5 in file "timer0.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1717 ;;      Params:         0       0       0       0       0       0       0
  1718 ;;      Locals:         0       0       0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0
  1720 ;;      Totals:         0       0       0       0       0       0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_init_config
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text7
  1732  000E2A                     __ptext7:
  1733                           	opt stack 0
  1734  000E2A                     _init_timer0:
  1735                           	opt stack 28
  1736                           
  1737                           ;timer0.c: 12: T08BIT = 1;
  1738                           
  1739                           ;incstack = 0
  1740  000E2A  8CD5               	bsf	4053,6,c	;volatile
  1741                           
  1742                           ;timer0.c: 14: T0CS = 0;
  1743  000E2C  9AD5               	bcf	4053,5,c	;volatile
  1744                           
  1745                           ;timer0.c: 16: PSA = 1;
  1746  000E2E  86D5               	bsf	4053,3,c	;volatile
  1747                           
  1748                           ;timer0.c: 18: TMR0 = 6;
  1749  000E30  0E00               	movlw	0
  1750  000E32  6ED7               	movwf	4055,c	;volatile
  1751  000E34  0E06               	movlw	6
  1752  000E36  6ED6               	movwf	4054,c	;volatile
  1753                           
  1754                           ;timer0.c: 21: T0IF = 0;
  1755  000E38  94F2               	bcf	intcon,2,c	;volatile
  1756                           
  1757                           ;timer0.c: 24: TMR0IE = 1;
  1758  000E3A  8AF2               	bsf	intcon,5,c	;volatile
  1759                           
  1760                           ;timer0.c: 27: PEIE = 1;
  1761  000E3C  8CF2               	bsf	intcon,6,c	;volatile
  1762                           
  1763                           ;timer0.c: 30: TMR0ON = 1;
  1764  000E3E  8ED5               	bsf	4053,7,c	;volatile
  1765  000E40  0012               	return		;funcret
  1766  000E42                     __end_of_init_timer0:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           intcon	equ	0xFF2
  1773                           postinc0	equ	0xFEE
  1774                           wreg	equ	0xFE8
  1775                           indf2	equ	0xFDF
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function _init_matrix_keypad *****************
  1781 ;; Defined at:
  1782 ;;		line 4 in file "matrix_keypad.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1796 ;;      Params:         0       0       0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0
  1799 ;;      Totals:         0       0       0       0       0       0       0
  1800 ;;Total ram usage:        0 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    1
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_init_config
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text8
  1811  000E82                     __ptext8:
  1812                           	opt stack 0
  1813  000E82                     _init_matrix_keypad:
  1814                           	opt stack 28
  1815                           
  1816                           ;matrix_keypad.c: 7: ADCON1 = 0x0F;
  1817                           
  1818                           ;incstack = 0
  1819  000E82  0E0F               	movlw	15
  1820  000E84  6EC1               	movwf	4033,c	;volatile
  1821                           
  1822                           ;matrix_keypad.c: 10: TRISB = 0x1E;
  1823  000E86  0E1E               	movlw	30
  1824  000E88  6E93               	movwf	3987,c	;volatile
  1825                           
  1826                           ;matrix_keypad.c: 13: RBPU = 0;
  1827  000E8A  9EF1               	bcf	intcon2,7,c	;volatile
  1828                           
  1829                           ;matrix_keypad.c: 15: PORTB = PORTB | 0xE0;
  1830  000E8C  5081               	movf	3969,w,c	;volatile
  1831  000E8E  09E0               	iorlw	224
  1832  000E90  6E81               	movwf	3969,c	;volatile
  1833  000E92  0012               	return		;funcret
  1834  000E94                     __end_of_init_matrix_keypad:
  1835                           	opt stack 0
  1836                           tblptru	equ	0xFF8
  1837                           tblptrh	equ	0xFF7
  1838                           tblptrl	equ	0xFF6
  1839                           tablat	equ	0xFF5
  1840                           intcon	equ	0xFF2
  1841                           intcon2	equ	0xFF1
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           indf2	equ	0xFDF
  1845                           fsr2h	equ	0xFDA
  1846                           fsr2l	equ	0xFD9
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function _init_i2c_config *****************
  1850 ;; Defined at:
  1851 ;;		line 3 in file "init_i2c_config.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, status,2
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1865 ;;      Params:         0       0       0       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0
  1868 ;;      Totals:         0       0       0       0       0       0       0
  1869 ;;Total ram usage:        0 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; Hardware stack levels required when called:    1
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_init_config
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text9
  1880  000E94                     __ptext9:
  1881                           	opt stack 0
  1882  000E94                     _init_i2c_config:
  1883                           	opt stack 28
  1884                           
  1885                           ;init_i2c_config.c: 6: PORTCbits.RC4 = 1;
  1886                           
  1887                           ;incstack = 0
  1888  000E94  8882               	bsf	3970,4,c	;volatile
  1889                           
  1890                           ;init_i2c_config.c: 7: PORTCbits.RC3 = 1;
  1891  000E96  8682               	bsf	3970,3,c	;volatile
  1892                           
  1893                           ;init_i2c_config.c: 10: SSPSTAT = 0x80;
  1894  000E98  0E80               	movlw	128
  1895  000E9A  6EC7               	movwf	4039,c	;volatile
  1896                           
  1897                           ;init_i2c_config.c: 11: SSPCON1 = 0x28;
  1898  000E9C  0E28               	movlw	40
  1899  000E9E  6EC6               	movwf	4038,c	;volatile
  1900                           
  1901                           ;init_i2c_config.c: 15: SSPADD = 4;
  1902  000EA0  0E04               	movlw	4
  1903  000EA2  6EC8               	movwf	4040,c	;volatile
  1904  000EA4  0012               	return		;funcret
  1905  000EA6                     __end_of_init_i2c_config:
  1906                           	opt stack 0
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           intcon	equ	0xFF2
  1912                           intcon2	equ	0xFF1
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           indf2	equ	0xFDF
  1916                           fsr2h	equ	0xFDA
  1917                           fsr2l	equ	0xFD9
  1918                           status	equ	0xFD8
  1919                           
  1920 ;; *************** function _init_i2c *****************
  1921 ;; Defined at:
  1922 ;;		line 4 in file "i2c.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1936 ;;      Params:         0       0       0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_init_config
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text10
  1951  000E5A                     __ptext10:
  1952                           	opt stack 0
  1953  000E5A                     _init_i2c:
  1954                           	opt stack 28
  1955                           
  1956                           ;i2c.c: 7: TRISC3 = 1;
  1957                           
  1958                           ;incstack = 0
  1959  000E5A  8694               	bsf	3988,3,c	;volatile
  1960                           
  1961                           ;i2c.c: 8: TRISC4 = 1;
  1962  000E5C  8894               	bsf	3988,4,c	;volatile
  1963                           
  1964                           ;i2c.c: 10: SSPCON1 = 0x28;
  1965  000E5E  0E28               	movlw	40
  1966  000E60  6EC6               	movwf	4038,c	;volatile
  1967                           
  1968                           ;i2c.c: 13: SSPADD = 0x64;
  1969  000E62  0E64               	movlw	100
  1970  000E64  6EC8               	movwf	4040,c	;volatile
  1971                           
  1972                           ;i2c.c: 15: CKE = 0;
  1973  000E66  9CC7               	bcf	4039,6,c	;volatile
  1974                           
  1975                           ;i2c.c: 17: SMP = 1;
  1976  000E68  8EC7               	bsf	4039,7,c	;volatile
  1977                           
  1978                           ;i2c.c: 19: SSPIF = 0;
  1979  000E6A  969E               	bcf	3998,3,c	;volatile
  1980                           
  1981                           ;i2c.c: 21: BCLIF = 0;
  1982  000E6C  96A1               	bcf	4001,3,c	;volatile
  1983  000E6E  0012               	return		;funcret
  1984  000E70                     __end_of_init_i2c:
  1985                           	opt stack 0
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           intcon	equ	0xFF2
  1991                           intcon2	equ	0xFF1
  1992                           postinc0	equ	0xFEE
  1993                           wreg	equ	0xFE8
  1994                           indf2	equ	0xFDF
  1995                           fsr2h	equ	0xFDA
  1996                           fsr2l	equ	0xFD9
  1997                           status	equ	0xFD8
  1998                           
  1999 ;; *************** function _init_ds1307 *****************
  2000 ;; Defined at:
  2001 ;;		line 11 in file "ds1307.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  dummy           1   17[COMRAM] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2015 ;;      Params:         0       0       0       0       0       0       0
  2016 ;;      Locals:         1       0       0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0
  2018 ;;      Totals:         1       0       0       0       0       0       0
  2019 ;;Total ram usage:        1 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    5
  2022 ;; This function calls:
  2023 ;;		_read_ds1307
  2024 ;;		_write_ds1307
  2025 ;; This function is called by:
  2026 ;;		_init_config
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text11
  2031  000B88                     __ptext11:
  2032                           	opt stack 0
  2033  000B88                     _init_ds1307:
  2034                           	opt stack 24
  2035                           
  2036                           ;ds1307.c: 13: unsigned char dummy;
  2037                           ;ds1307.c: 16: dummy = read_ds1307(0x00);
  2038                           
  2039                           ;incstack = 0
  2040  000B88  0E00               	movlw	0
  2041  000B8A  EC91  F006         	call	_read_ds1307
  2042  000B8E  6E3A               	movwf	init_ds1307@dummy,c
  2043                           
  2044                           ;ds1307.c: 18: write_ds1307(0x00, 0x80);
  2045  000B90  0E80               	movlw	128
  2046  000B92  6E38               	movwf	write_ds1307@data,c
  2047  000B94  0E00               	movlw	0
  2048  000B96  EC06  F007         	call	_write_ds1307
  2049                           
  2050                           ;ds1307.c: 19: dummy = read_ds1307(0x01);
  2051  000B9A  0E01               	movlw	1
  2052  000B9C  EC91  F006         	call	_read_ds1307
  2053  000BA0  6E3A               	movwf	init_ds1307@dummy,c
  2054                           
  2055                           ;ds1307.c: 20: write_ds1307(0x01, 0x35);
  2056  000BA2  0E35               	movlw	53
  2057  000BA4  6E38               	movwf	write_ds1307@data,c
  2058  000BA6  0E01               	movlw	1
  2059  000BA8  EC06  F007         	call	_write_ds1307
  2060                           
  2061                           ;ds1307.c: 23: dummy = read_ds1307(0x02);
  2062  000BAC  0E02               	movlw	2
  2063  000BAE  EC91  F006         	call	_read_ds1307
  2064  000BB2  6E3A               	movwf	init_ds1307@dummy,c
  2065                           
  2066                           ;ds1307.c: 25: write_ds1307(0x02, 0x51);
  2067  000BB4  0E51               	movlw	81
  2068  000BB6  6E38               	movwf	write_ds1307@data,c
  2069  000BB8  0E02               	movlw	2
  2070  000BBA  EC06  F007         	call	_write_ds1307
  2071                           
  2072                           ;ds1307.c: 40: write_ds1307(0x07, 0x93);
  2073  000BBE  0E93               	movlw	147
  2074  000BC0  6E38               	movwf	write_ds1307@data,c
  2075  000BC2  0E07               	movlw	7
  2076  000BC4  EC06  F007         	call	_write_ds1307
  2077                           
  2078                           ;ds1307.c: 43: dummy = read_ds1307(0x00);
  2079  000BC8  0E00               	movlw	0
  2080  000BCA  EC91  F006         	call	_read_ds1307
  2081  000BCE  6E3A               	movwf	init_ds1307@dummy,c
  2082                           
  2083                           ;ds1307.c: 44: write_ds1307(0x00, dummy & 0x7F);
  2084  000BD0  503A               	movf	init_ds1307@dummy,w,c
  2085  000BD2  0B7F               	andlw	127
  2086  000BD4  6E38               	movwf	write_ds1307@data,c
  2087  000BD6  0E00               	movlw	0
  2088  000BD8  EC06  F007         	call	_write_ds1307
  2089  000BDC  0012               	return		;funcret
  2090  000BDE                     __end_of_init_ds1307:
  2091                           	opt stack 0
  2092                           tblptru	equ	0xFF8
  2093                           tblptrh	equ	0xFF7
  2094                           tblptrl	equ	0xFF6
  2095                           tablat	equ	0xFF5
  2096                           intcon	equ	0xFF2
  2097                           intcon2	equ	0xFF1
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           indf2	equ	0xFDF
  2101                           fsr2h	equ	0xFDA
  2102                           fsr2l	equ	0xFD9
  2103                           status	equ	0xFD8
  2104                           
  2105 ;; *************** function _write_ds1307 *****************
  2106 ;; Defined at:
  2107 ;;		line 48 in file "ds1307.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  address         1    wreg     unsigned char 
  2110 ;;  data            1   15[COMRAM] unsigned char 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  address         1   16[COMRAM] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2122 ;;      Params:         1       0       0       0       0       0       0
  2123 ;;      Locals:         1       0       0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0
  2125 ;;      Totals:         2       0       0       0       0       0       0
  2126 ;;Total ram usage:        2 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    3
  2129 ;; This function calls:
  2130 ;;		_i2c_start
  2131 ;;		_i2c_stop
  2132 ;;		_i2c_write
  2133 ;; This function is called by:
  2134 ;;		_init_ds1307
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text12
  2139  000E0C                     __ptext12:
  2140                           	opt stack 0
  2141  000E0C                     _write_ds1307:
  2142                           	opt stack 25
  2143                           
  2144                           ;incstack = 0
  2145                           ;write_ds1307@address stored from wreg
  2146  000E0C  6E39               	movwf	write_ds1307@address,c
  2147                           
  2148                           ;ds1307.c: 50: i2c_start();
  2149  000E0E  EC6C  F007         	call	_i2c_start	;wreg free
  2150                           
  2151                           ;ds1307.c: 51: i2c_write(0xD0);
  2152  000E12  0ED0               	movlw	208
  2153  000E14  EC5C  F007         	call	_i2c_write
  2154                           
  2155                           ;ds1307.c: 52: i2c_write(address);
  2156  000E18  5039               	movf	write_ds1307@address,w,c
  2157  000E1A  EC5C  F007         	call	_i2c_write
  2158                           
  2159                           ;ds1307.c: 53: i2c_write(data);
  2160  000E1E  5038               	movf	write_ds1307@data,w,c
  2161  000E20  EC5C  F007         	call	_i2c_write
  2162                           
  2163                           ;ds1307.c: 54: i2c_stop();
  2164  000E24  EC68  F007         	call	_i2c_stop	;wreg free
  2165  000E28  0012               	return		;funcret
  2166  000E2A                     __end_of_write_ds1307:
  2167                           	opt stack 0
  2168                           tblptru	equ	0xFF8
  2169                           tblptrh	equ	0xFF7
  2170                           tblptrl	equ	0xFF6
  2171                           tablat	equ	0xFF5
  2172                           intcon	equ	0xFF2
  2173                           intcon2	equ	0xFF1
  2174                           postinc0	equ	0xFEE
  2175                           wreg	equ	0xFE8
  2176                           indf2	equ	0xFDF
  2177                           fsr2h	equ	0xFDA
  2178                           fsr2l	equ	0xFD9
  2179                           status	equ	0xFD8
  2180                           
  2181 ;; *************** function _init_clcd *****************
  2182 ;; Defined at:
  2183 ;;		line 27 in file "clcd.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2197 ;;      Params:         0       0       0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0
  2200 ;;      Totals:         0       0       0       0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    2
  2204 ;; This function calls:
  2205 ;;		_clcd_write
  2206 ;; This function is called by:
  2207 ;;		_init_config
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text13
  2212  000CEC                     __ptext13:
  2213                           	opt stack 0
  2214  000CEC                     _init_clcd:
  2215                           	opt stack 27
  2216                           
  2217                           ;clcd.c: 30: TRISD = 0x00;
  2218                           
  2219                           ;incstack = 0
  2220  000CEC  0E00               	movlw	0
  2221  000CEE  6E95               	movwf	3989,c	;volatile
  2222                           
  2223                           ;clcd.c: 32: TRISC = TRISC & 0xF8;
  2224  000CF0  5094               	movf	3988,w,c	;volatile
  2225  000CF2  0BF8               	andlw	248
  2226  000CF4  6E94               	movwf	3988,c	;volatile
  2227                           
  2228                           ;clcd.c: 34: PORTCbits.RC0 = 0;
  2229  000CF6  9082               	bcf	3970,0,c	;volatile
  2230                           
  2231                           ;clcd.c: 36: clcd_write(0x02, 0);
  2232  000CF8  0E00               	movlw	0
  2233  000CFA  6E37               	movwf	clcd_write@control_bit,c
  2234  000CFC  0E02               	movlw	2
  2235  000CFE  ECBA  F006         	call	_clcd_write
  2236                           
  2237                           ;clcd.c: 37: clcd_write(0x38, 0);
  2238  000D02  0E00               	movlw	0
  2239  000D04  6E37               	movwf	clcd_write@control_bit,c
  2240  000D06  0E38               	movlw	56
  2241  000D08  ECBA  F006         	call	_clcd_write
  2242                           
  2243                           ;clcd.c: 38: clcd_write(0x0C, 0);
  2244  000D0C  0E00               	movlw	0
  2245  000D0E  6E37               	movwf	clcd_write@control_bit,c
  2246  000D10  0E0C               	movlw	12
  2247  000D12  ECBA  F006         	call	_clcd_write
  2248                           
  2249                           ;clcd.c: 39: clcd_write(0x01, 0);
  2250  000D16  0E00               	movlw	0
  2251  000D18  6E37               	movwf	clcd_write@control_bit,c
  2252  000D1A  0E01               	movlw	1
  2253  000D1C  ECBA  F006         	call	_clcd_write
  2254  000D20  0012               	return		;funcret
  2255  000D22                     __end_of_init_clcd:
  2256                           	opt stack 0
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           intcon	equ	0xFF2
  2262                           intcon2	equ	0xFF1
  2263                           postinc0	equ	0xFEE
  2264                           wreg	equ	0xFE8
  2265                           indf2	equ	0xFDF
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _init_adc *****************
  2271 ;; Defined at:
  2272 ;;		line 4 in file "adc.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2286 ;;      Params:         0       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_init_config
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text14
  2301  000D4C                     __ptext14:
  2302                           	opt stack 0
  2303  000D4C                     _init_adc:
  2304                           	opt stack 28
  2305                           
  2306                           ;adc.c: 7: ADFM = 1;
  2307                           
  2308                           ;incstack = 0
  2309  000D4C  8EC0               	bsf	4032,7,c	;volatile
  2310                           
  2311                           ;adc.c: 13: ACQT2 = 0;
  2312  000D4E  9AC0               	bcf	4032,5,c	;volatile
  2313                           
  2314                           ;adc.c: 14: ACQT1 = 1;
  2315  000D50  88C0               	bsf	4032,4,c	;volatile
  2316                           
  2317                           ;adc.c: 15: ACQT0 = 0;
  2318  000D52  96C0               	bcf	4032,3,c	;volatile
  2319                           
  2320                           ;adc.c: 21: ADCS0 = 0;
  2321  000D54  90C0               	bcf	4032,0,c	;volatile
  2322                           
  2323                           ;adc.c: 22: ADCS1 = 1;
  2324  000D56  82C0               	bsf	4032,1,c	;volatile
  2325                           
  2326                           ;adc.c: 23: ADCS2 = 0;
  2327  000D58  94C0               	bcf	4032,2,c	;volatile
  2328                           
  2329                           ;adc.c: 26: GODONE = 0;
  2330  000D5A  92C2               	bcf	4034,1,c	;volatile
  2331                           
  2332                           ;adc.c: 29: CHS3 = 0;
  2333  000D5C  9AC2               	bcf	4034,5,c	;volatile
  2334                           
  2335                           ;adc.c: 30: CHS2 = 1;
  2336  000D5E  88C2               	bsf	4034,4,c	;volatile
  2337                           
  2338                           ;adc.c: 31: CHS1 = 0;
  2339  000D60  96C2               	bcf	4034,3,c	;volatile
  2340                           
  2341                           ;adc.c: 32: CHS0 = 0;
  2342  000D62  94C2               	bcf	4034,2,c	;volatile
  2343                           
  2344                           ;adc.c: 35: VCFG1 = 0;
  2345  000D64  9AC1               	bcf	4033,5,c	;volatile
  2346                           
  2347                           ;adc.c: 37: VCFG0 = 0;
  2348  000D66  98C1               	bcf	4033,4,c	;volatile
  2349                           
  2350                           ;adc.c: 40: ADRESH = 0;
  2351  000D68  0E00               	movlw	0
  2352  000D6A  6EC4               	movwf	4036,c	;volatile
  2353                           
  2354                           ;adc.c: 41: ADRESL = 0;
  2355  000D6C  0E00               	movlw	0
  2356  000D6E  6EC3               	movwf	4035,c	;volatile
  2357                           
  2358                           ;adc.c: 44: ADON = 1;
  2359  000D70  80C2               	bsf	4034,0,c	;volatile
  2360  000D72  0012               	return		;funcret
  2361  000D74                     __end_of_init_adc:
  2362                           	opt stack 0
  2363                           tblptru	equ	0xFF8
  2364                           tblptrh	equ	0xFF7
  2365                           tblptrl	equ	0xFF6
  2366                           tablat	equ	0xFF5
  2367                           intcon	equ	0xFF2
  2368                           intcon2	equ	0xFF1
  2369                           postinc0	equ	0xFEE
  2370                           wreg	equ	0xFE8
  2371                           indf2	equ	0xFDF
  2372                           fsr2h	equ	0xFDA
  2373                           fsr2l	equ	0xFD9
  2374                           status	equ	0xFD8
  2375                           
  2376 ;; *************** function _get_time *****************
  2377 ;; Defined at:
  2378 ;;		line 37 in file "main.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2392 ;;      Params:         0       0       0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0
  2395 ;;      Totals:         0       0       0       0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    5
  2399 ;; This function calls:
  2400 ;;		_read_ds1307
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text15
  2407  000AB8                     __ptext15:
  2408                           	opt stack 0
  2409  000AB8                     _get_time:
  2410                           	opt stack 25
  2411                           
  2412                           ;main.c: 39: clock_reg[0] = read_ds1307(0x02);
  2413                           
  2414                           ;incstack = 0
  2415  000AB8  0E02               	movlw	2
  2416  000ABA  EC91  F006         	call	_read_ds1307
  2417  000ABE  6E05               	movwf	_clock_reg,c
  2418                           
  2419                           ;main.c: 40: clock_reg[0] &= 0xF0;
  2420  000AC0  0EF0               	movlw	240
  2421  000AC2  1605               	andwf	_clock_reg,f,c
  2422                           
  2423                           ;main.c: 41: clock_reg[0] |= 0x06;
  2424  000AC4  0E06               	movlw	6
  2425  000AC6  1205               	iorwf	_clock_reg,f,c
  2426                           
  2427                           ;main.c: 43: clock_reg[1] = read_ds1307(0x01);
  2428  000AC8  0E01               	movlw	1
  2429  000ACA  EC91  F006         	call	_read_ds1307
  2430  000ACE  6E06               	movwf	_clock_reg+1,c
  2431                           
  2432                           ;main.c: 44: clock_reg[2] = read_ds1307(0x00);
  2433  000AD0  0E00               	movlw	0
  2434  000AD2  EC91  F006         	call	_read_ds1307
  2435  000AD6  6E07               	movwf	_clock_reg+2,c
  2436                           
  2437                           ;main.c: 46: if (clock_reg[0] & 0x40)
  2438  000AD8  AC05               	btfss	_clock_reg,6,c
  2439  000ADA  D004               	goto	l2172
  2440                           
  2441                           ;main.c: 47: {
  2442                           ;main.c: 48: time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  2443  000ADC  3805               	swapf	_clock_reg,w,c
  2444  000ADE  0B0F               	andlw	15
  2445  000AE0  0B01               	andlw	1
  2446  000AE2  D003               	goto	L2
  2447  000AE4                     l2172:
  2448                           
  2449                           ;main.c: 51: else
  2450                           ;main.c: 52: {
  2451                           ;main.c: 53: time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  2452  000AE4  3805               	swapf	_clock_reg,w,c
  2453  000AE6  0B0F               	andlw	15
  2454  000AE8  0B03               	andlw	3
  2455  000AEA                     L2:
  2456  000AEA  0F30               	addlw	48
  2457  000AEC  6E20               	movwf	_time,c
  2458                           
  2459                           ;main.c: 54: time[1] = '0' + (clock_reg[0] & 0x0F);
  2460  000AEE  5005               	movf	_clock_reg,w,c
  2461  000AF0  0B0F               	andlw	15
  2462  000AF2  0F30               	addlw	48
  2463  000AF4  6E21               	movwf	_time+1,c
  2464                           
  2465                           ;main.c: 55: }
  2466                           ;main.c: 56: time[2] = ':';
  2467  000AF6  0E3A               	movlw	58
  2468  000AF8  6E22               	movwf	_time+2,c
  2469                           
  2470                           ;main.c: 57: time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  2471  000AFA  3806               	swapf	_clock_reg+1,w,c
  2472  000AFC  0B0F               	andlw	15
  2473  000AFE  0B0F               	andlw	15
  2474  000B00  0F30               	addlw	48
  2475  000B02  6E23               	movwf	_time+3,c
  2476                           
  2477                           ;main.c: 58: time[4] = '0' + (clock_reg[1] & 0x0F);
  2478  000B04  5006               	movf	_clock_reg+1,w,c
  2479  000B06  0B0F               	andlw	15
  2480  000B08  0F30               	addlw	48
  2481  000B0A  6E24               	movwf	_time+4,c
  2482                           
  2483                           ;main.c: 59: time[5] = ':';
  2484  000B0C  0E3A               	movlw	58
  2485  000B0E  6E25               	movwf	_time+5,c
  2486                           
  2487                           ;main.c: 60: time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  2488  000B10  3807               	swapf	_clock_reg+2,w,c
  2489  000B12  0B0F               	andlw	15
  2490  000B14  0B0F               	andlw	15
  2491  000B16  0F30               	addlw	48
  2492  000B18  6E26               	movwf	_time+6,c
  2493                           
  2494                           ;main.c: 61: time[7] = '0' + (clock_reg[2] & 0x0F);
  2495  000B1A  5007               	movf	_clock_reg+2,w,c
  2496  000B1C  0B0F               	andlw	15
  2497  000B1E  0F30               	addlw	48
  2498  000B20  6E27               	movwf	_time+7,c
  2499                           
  2500                           ;main.c: 62: time[8] = '\0';
  2501  000B22  0E00               	movlw	0
  2502  000B24  6E28               	movwf	_time+8,c
  2503  000B26  0012               	return		;funcret
  2504  000B28                     __end_of_get_time:
  2505                           	opt stack 0
  2506                           tblptru	equ	0xFF8
  2507                           tblptrh	equ	0xFF7
  2508                           tblptrl	equ	0xFF6
  2509                           tablat	equ	0xFF5
  2510                           intcon	equ	0xFF2
  2511                           intcon2	equ	0xFF1
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           indf2	equ	0xFDF
  2515                           fsr2h	equ	0xFDA
  2516                           fsr2l	equ	0xFD9
  2517                           status	equ	0xFD8
  2518                           
  2519 ;; *************** function _read_ds1307 *****************
  2520 ;; Defined at:
  2521 ;;		line 57 in file "ds1307.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  address         1    wreg     unsigned char 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  address         1   15[COMRAM] unsigned char 
  2526 ;;  data            1   16[COMRAM] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      unsigned char 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2536 ;;      Params:         0       0       0       0       0       0       0
  2537 ;;      Locals:         2       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0
  2539 ;;      Totals:         2       0       0       0       0       0       0
  2540 ;;Total ram usage:        2 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    4
  2543 ;; This function calls:
  2544 ;;		_i2c_read
  2545 ;;		_i2c_rep_start
  2546 ;;		_i2c_start
  2547 ;;		_i2c_stop
  2548 ;;		_i2c_write
  2549 ;; This function is called by:
  2550 ;;		_get_time
  2551 ;;		_init_ds1307
  2552 ;;		_get_date
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text16
  2557  000D22                     __ptext16:
  2558                           	opt stack 0
  2559  000D22                     _read_ds1307:
  2560                           	opt stack 24
  2561                           
  2562                           ;incstack = 0
  2563                           ;read_ds1307@address stored from wreg
  2564  000D22  6E38               	movwf	read_ds1307@address,c
  2565                           
  2566                           ;ds1307.c: 59: unsigned char data;
  2567                           ;ds1307.c: 61: i2c_start();
  2568  000D24  EC6C  F007         	call	_i2c_start	;wreg free
  2569                           
  2570                           ;ds1307.c: 62: i2c_write(0xD0);
  2571  000D28  0ED0               	movlw	208
  2572  000D2A  EC5C  F007         	call	_i2c_write
  2573                           
  2574                           ;ds1307.c: 63: i2c_write(address);
  2575  000D2E  5038               	movf	read_ds1307@address,w,c
  2576  000D30  EC5C  F007         	call	_i2c_write
  2577                           
  2578                           ;ds1307.c: 64: i2c_rep_start();
  2579  000D34  EC70  F007         	call	_i2c_rep_start	;wreg free
  2580                           
  2581                           ;ds1307.c: 65: i2c_write(0xD1);
  2582  000D38  0ED1               	movlw	209
  2583  000D3A  EC5C  F007         	call	_i2c_write
  2584                           
  2585                           ;ds1307.c: 66: data = i2c_read();
  2586  000D3E  EC62  F007         	call	_i2c_read	;wreg free
  2587  000D42  6E39               	movwf	read_ds1307@data,c
  2588                           
  2589                           ;ds1307.c: 67: i2c_stop();
  2590  000D44  EC68  F007         	call	_i2c_stop	;wreg free
  2591                           
  2592                           ;ds1307.c: 69: return data;
  2593  000D48  5039               	movf	read_ds1307@data,w,c
  2594  000D4A  0012               	return	
  2595  000D4C                     __end_of_read_ds1307:
  2596                           	opt stack 0
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           intcon	equ	0xFF2
  2602                           intcon2	equ	0xFF1
  2603                           postinc0	equ	0xFEE
  2604                           wreg	equ	0xFE8
  2605                           indf2	equ	0xFDF
  2606                           fsr2h	equ	0xFDA
  2607                           fsr2l	equ	0xFD9
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function _i2c_write *****************
  2611 ;; Defined at:
  2612 ;;		line 56 in file "i2c.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  data            1    wreg     unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  data            1   14[COMRAM] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2626 ;;      Params:         0       0       0       0       0       0       0
  2627 ;;      Locals:         1       0       0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0
  2629 ;;      Totals:         1       0       0       0       0       0       0
  2630 ;;Total ram usage:        1 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    2
  2633 ;; This function calls:
  2634 ;;		_i2c_idle
  2635 ;; This function is called by:
  2636 ;;		_write_ds1307
  2637 ;;		_read_ds1307
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text17
  2642  000EB8                     __ptext17:
  2643                           	opt stack 0
  2644  000EB8                     _i2c_write:
  2645                           	opt stack 25
  2646                           
  2647                           ;incstack = 0
  2648                           ;i2c_write@data stored from wreg
  2649  000EB8  6E37               	movwf	i2c_write@data,c
  2650                           
  2651                           ;i2c.c: 58: SSPBUF = data;
  2652  000EBA  C037  FFC9         	movff	i2c_write@data,4041	;volatile
  2653                           
  2654                           ;i2c.c: 59: i2c_idle();
  2655  000EBE  EC78  F007         	call	_i2c_idle	;wreg free
  2656  000EC2  0012               	return		;funcret
  2657  000EC4                     __end_of_i2c_write:
  2658                           	opt stack 0
  2659                           tblptru	equ	0xFF8
  2660                           tblptrh	equ	0xFF7
  2661                           tblptrl	equ	0xFF6
  2662                           tablat	equ	0xFF5
  2663                           intcon	equ	0xFF2
  2664                           intcon2	equ	0xFF1
  2665                           postinc0	equ	0xFEE
  2666                           wreg	equ	0xFE8
  2667                           indf2	equ	0xFDF
  2668                           fsr2h	equ	0xFDA
  2669                           fsr2l	equ	0xFD9
  2670                           status	equ	0xFD8
  2671                           
  2672 ;; *************** function _i2c_stop *****************
  2673 ;; Defined at:
  2674 ;;		line 44 in file "i2c.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2688 ;;      Params:         0       0       0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    2
  2695 ;; This function calls:
  2696 ;;		_i2c_idle
  2697 ;; This function is called by:
  2698 ;;		_write_ds1307
  2699 ;;		_read_ds1307
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text18
  2704  000ED0                     __ptext18:
  2705                           	opt stack 0
  2706  000ED0                     _i2c_stop:
  2707                           	opt stack 25
  2708                           
  2709                           ;i2c.c: 46: PEN = 1;
  2710                           
  2711                           ;incstack = 0
  2712  000ED0  84C5               	bsf	4037,2,c	;volatile
  2713                           
  2714                           ;i2c.c: 47: i2c_idle();
  2715  000ED2  EC78  F007         	call	_i2c_idle	;wreg free
  2716  000ED6  0012               	return		;funcret
  2717  000ED8                     __end_of_i2c_stop:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           intcon	equ	0xFF2
  2724                           intcon2	equ	0xFF1
  2725                           postinc0	equ	0xFEE
  2726                           wreg	equ	0xFE8
  2727                           indf2	equ	0xFDF
  2728                           fsr2h	equ	0xFDA
  2729                           fsr2l	equ	0xFD9
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function _i2c_start *****************
  2733 ;; Defined at:
  2734 ;;		line 38 in file "i2c.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2748 ;;      Params:         0       0       0       0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0
  2751 ;;      Totals:         0       0       0       0       0       0       0
  2752 ;;Total ram usage:        0 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    2
  2755 ;; This function calls:
  2756 ;;		_i2c_idle
  2757 ;; This function is called by:
  2758 ;;		_write_ds1307
  2759 ;;		_read_ds1307
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text19
  2764  000ED8                     __ptext19:
  2765                           	opt stack 0
  2766  000ED8                     _i2c_start:
  2767                           	opt stack 25
  2768                           
  2769                           ;i2c.c: 40: SEN = 1;
  2770                           
  2771                           ;incstack = 0
  2772  000ED8  80C5               	bsf	4037,0,c	;volatile
  2773                           
  2774                           ;i2c.c: 41: i2c_idle();
  2775  000EDA  EC78  F007         	call	_i2c_idle	;wreg free
  2776  000EDE  0012               	return		;funcret
  2777  000EE0                     __end_of_i2c_start:
  2778                           	opt stack 0
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           intcon	equ	0xFF2
  2784                           intcon2	equ	0xFF1
  2785                           postinc0	equ	0xFEE
  2786                           wreg	equ	0xFE8
  2787                           indf2	equ	0xFDF
  2788                           fsr2h	equ	0xFDA
  2789                           fsr2l	equ	0xFD9
  2790                           status	equ	0xFD8
  2791                           
  2792 ;; *************** function _i2c_rep_start *****************
  2793 ;; Defined at:
  2794 ;;		line 50 in file "i2c.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2808 ;;      Params:         0       0       0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    2
  2815 ;; This function calls:
  2816 ;;		_i2c_idle
  2817 ;; This function is called by:
  2818 ;;		_read_ds1307
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text20
  2823  000EE0                     __ptext20:
  2824                           	opt stack 0
  2825  000EE0                     _i2c_rep_start:
  2826                           	opt stack 25
  2827                           
  2828                           ;i2c.c: 52: RSEN = 1;
  2829                           
  2830                           ;incstack = 0
  2831  000EE0  82C5               	bsf	4037,1,c	;volatile
  2832                           
  2833                           ;i2c.c: 53: i2c_idle();
  2834  000EE2  EC78  F007         	call	_i2c_idle	;wreg free
  2835  000EE6  0012               	return		;funcret
  2836  000EE8                     __end_of_i2c_rep_start:
  2837                           	opt stack 0
  2838                           tblptru	equ	0xFF8
  2839                           tblptrh	equ	0xFF7
  2840                           tblptrl	equ	0xFF6
  2841                           tablat	equ	0xFF5
  2842                           intcon	equ	0xFF2
  2843                           intcon2	equ	0xFF1
  2844                           postinc0	equ	0xFEE
  2845                           wreg	equ	0xFE8
  2846                           indf2	equ	0xFDF
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _i2c_read *****************
  2852 ;; Defined at:
  2853 ;;		line 74 in file "i2c.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      unsigned char 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2867 ;;      Params:         0       0       0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    3
  2874 ;; This function calls:
  2875 ;;		_i2c_no_ack
  2876 ;;		_i2c_rx_mode
  2877 ;; This function is called by:
  2878 ;;		_read_ds1307
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text21
  2883  000EC4                     __ptext21:
  2884                           	opt stack 0
  2885  000EC4                     _i2c_read:
  2886                           	opt stack 24
  2887                           
  2888                           ;i2c.c: 76: i2c_rx_mode();
  2889                           
  2890                           ;incstack = 0
  2891  000EC4  EC74  F007         	call	_i2c_rx_mode	;wreg free
  2892                           
  2893                           ;i2c.c: 77: i2c_no_ack();
  2894  000EC8  EC7C  F007         	call	_i2c_no_ack	;wreg free
  2895                           
  2896                           ;i2c.c: 79: return SSPBUF;
  2897  000ECC  50C9               	movf	4041,w,c	;volatile
  2898  000ECE  0012               	return	
  2899  000ED0                     __end_of_i2c_read:
  2900                           	opt stack 0
  2901                           tblptru	equ	0xFF8
  2902                           tblptrh	equ	0xFF7
  2903                           tblptrl	equ	0xFF6
  2904                           tablat	equ	0xFF5
  2905                           intcon	equ	0xFF2
  2906                           intcon2	equ	0xFF1
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           indf2	equ	0xFDF
  2910                           fsr2h	equ	0xFDA
  2911                           fsr2l	equ	0xFD9
  2912                           status	equ	0xFD8
  2913                           
  2914 ;; *************** function _i2c_rx_mode *****************
  2915 ;; Defined at:
  2916 ;;		line 62 in file "i2c.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2930 ;;      Params:         0       0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    2
  2937 ;; This function calls:
  2938 ;;		_i2c_idle
  2939 ;; This function is called by:
  2940 ;;		_i2c_read
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text22
  2945  000EE8                     __ptext22:
  2946                           	opt stack 0
  2947  000EE8                     _i2c_rx_mode:
  2948                           	opt stack 24
  2949                           
  2950                           ;i2c.c: 64: RCEN = 1;
  2951                           
  2952                           ;incstack = 0
  2953  000EE8  86C5               	bsf	4037,3,c	;volatile
  2954                           
  2955                           ;i2c.c: 65: i2c_idle();
  2956  000EEA  EC78  F007         	call	_i2c_idle	;wreg free
  2957  000EEE  0012               	return		;funcret
  2958  000EF0                     __end_of_i2c_rx_mode:
  2959                           	opt stack 0
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           intcon	equ	0xFF2
  2965                           intcon2	equ	0xFF1
  2966                           postinc0	equ	0xFEE
  2967                           wreg	equ	0xFE8
  2968                           indf2	equ	0xFDF
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _i2c_idle *****************
  2974 ;; Defined at:
  2975 ;;		line 24 in file "i2c.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		None
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2989 ;;      Params:         0       0       0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0
  2992 ;;      Totals:         0       0       0       0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_i2c_start
  3000 ;;		_i2c_stop
  3001 ;;		_i2c_rep_start
  3002 ;;		_i2c_write
  3003 ;;		_i2c_rx_mode
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text23
  3008  000EF0                     __ptext23:
  3009                           	opt stack 0
  3010  000EF0                     _i2c_idle:
  3011                           	opt stack 25
  3012  000EF0                     l306:
  3013  000EF0  A69E               	btfss	3998,3,c	;volatile
  3014  000EF2  D7FE               	goto	l306
  3015                           
  3016                           ;i2c.c: 27: SSPIF = 0;
  3017  000EF4  969E               	bcf	3998,3,c	;volatile
  3018  000EF6  0012               	return		;funcret
  3019  000EF8                     __end_of_i2c_idle:
  3020                           	opt stack 0
  3021                           tblptru	equ	0xFF8
  3022                           tblptrh	equ	0xFF7
  3023                           tblptrl	equ	0xFF6
  3024                           tablat	equ	0xFF5
  3025                           intcon	equ	0xFF2
  3026                           intcon2	equ	0xFF1
  3027                           postinc0	equ	0xFEE
  3028                           wreg	equ	0xFE8
  3029                           indf2	equ	0xFDF
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function _i2c_no_ack *****************
  3035 ;; Defined at:
  3036 ;;		line 68 in file "i2c.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		None
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3050 ;;      Params:         0       0       0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0
  3053 ;;      Totals:         0       0       0       0       0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_i2c_read
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text24
  3065  000EF8                     __ptext24:
  3066                           	opt stack 0
  3067  000EF8                     _i2c_no_ack:
  3068                           	opt stack 25
  3069                           
  3070                           ;i2c.c: 70: ACKDT = 1;
  3071                           
  3072                           ;incstack = 0
  3073  000EF8  8AC5               	bsf	4037,5,c	;volatile
  3074                           
  3075                           ;i2c.c: 71: ACKEN = 1;
  3076  000EFA  88C5               	bsf	4037,4,c	;volatile
  3077  000EFC  0012               	return		;funcret
  3078  000EFE                     __end_of_i2c_no_ack:
  3079                           	opt stack 0
  3080                           tblptru	equ	0xFF8
  3081                           tblptrh	equ	0xFF7
  3082                           tblptrl	equ	0xFF6
  3083                           tablat	equ	0xFF5
  3084                           intcon	equ	0xFF2
  3085                           intcon2	equ	0xFF1
  3086                           postinc0	equ	0xFEE
  3087                           wreg	equ	0xFE8
  3088                           indf2	equ	0xFDF
  3089                           fsr2h	equ	0xFDA
  3090                           fsr2l	equ	0xFD9
  3091                           status	equ	0xFD8
  3092                           
  3093 ;; *************** function _display_time *****************
  3094 ;; Defined at:
  3095 ;;		line 20 in file "main.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3109 ;;      Params:         0       0       0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0
  3112 ;;      Totals:         0       0       0       0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    3
  3116 ;; This function calls:
  3117 ;;		_clcd_print
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text25
  3124  000EA6                     __ptext25:
  3125                           	opt stack 0
  3126  000EA6                     _display_time:
  3127                           	opt stack 27
  3128                           
  3129                           ;main.c: 22: clcd_print(time, (0xC0 + (0)));
  3130                           
  3131                           ;incstack = 0
  3132  000EA6  0E20               	movlw	low _time
  3133  000EA8  6E39               	movwf	clcd_print@data,c
  3134  000EAA  0E00               	movlw	high _time
  3135  000EAC  6E3A               	movwf	clcd_print@data+1,c
  3136  000EAE  0EC0               	movlw	192
  3137  000EB0  6E3B               	movwf	clcd_print@addr,c
  3138  000EB2  EC94  F005         	call	_clcd_print	;wreg free
  3139  000EB6  0012               	return		;funcret
  3140  000EB8                     __end_of_display_time:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           intcon	equ	0xFF2
  3147                           intcon2	equ	0xFF1
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           indf2	equ	0xFDF
  3151                           fsr2h	equ	0xFDA
  3152                           fsr2l	equ	0xFD9
  3153                           status	equ	0xFD8
  3154                           
  3155 ;; *************** function _clcd_print *****************
  3156 ;; Defined at:
  3157 ;;		line 42 in file "clcd.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  data            2   16[COMRAM] PTR const unsigned char 
  3160 ;;		 -> STR_3(4), STR_2(4), main@buff(5), STR_1(17), 
  3161 ;;		 -> time(9), date(11), 
  3162 ;;  addr            1   18[COMRAM] unsigned char 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3174 ;;      Params:         3       0       0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0
  3177 ;;      Totals:         3       0       0       0       0       0       0
  3178 ;;Total ram usage:        3 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    2
  3181 ;; This function calls:
  3182 ;;		_clcd_write
  3183 ;; This function is called by:
  3184 ;;		_display_time
  3185 ;;		_main
  3186 ;;		_display_date
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text26
  3191  000B28                     __ptext26:
  3192                           	opt stack 0
  3193  000B28                     _clcd_print:
  3194                           	opt stack 27
  3195                           
  3196                           ;clcd.c: 44: clcd_write(addr, 0);
  3197                           
  3198                           ;incstack = 0
  3199  000B28  0E00               	movlw	0
  3200  000B2A  6E37               	movwf	clcd_write@control_bit,c
  3201  000B2C  503B               	movf	clcd_print@addr,w,c
  3202  000B2E  ECBA  F006         	call	_clcd_write
  3203                           
  3204                           ;clcd.c: 45: while (*data != '\0')
  3205  000B32  D016               	goto	l2022
  3206  000B34                     l2018:
  3207                           
  3208                           ;clcd.c: 46: {
  3209                           ;clcd.c: 47: clcd_write(*data++, 1);
  3210  000B34  0E01               	movlw	1
  3211  000B36  6E37               	movwf	clcd_write@control_bit,c
  3212  000B38  C039  FFF6         	movff	clcd_print@data,tblptrl
  3213  000B3C  C03A  FFF7         	movff	clcd_print@data+1,tblptrh
  3214  000B40  6AF8               	clrf	tblptru,c
  3215  000B42  0E05               	movlw	(high __ramtop+-1)
  3216  000B44  64F7               	cpfsgt	tblptrh,c
  3217  000B46  D003               	bra	u1087
  3218  000B48  0008               	tblrd		*
  3219  000B4A  50F5               	movf	tablat,w,c
  3220  000B4C  D005               	bra	u1080
  3221  000B4E                     u1087:
  3222  000B4E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3223  000B52  CFF7 FFEA          	movff	tblptrh,fsr0h
  3224  000B56  50EF               	movf	indf0,w,c
  3225  000B58                     u1080:
  3226  000B58  ECBA  F006         	call	_clcd_write
  3227  000B5C  4A39               	infsnz	clcd_print@data,f,c
  3228  000B5E  2A3A               	incf	clcd_print@data+1,f,c
  3229  000B60                     l2022:
  3230  000B60  C039  FFF6         	movff	clcd_print@data,tblptrl
  3231  000B64  C03A  FFF7         	movff	clcd_print@data+1,tblptrh
  3232  000B68  6AF8               	clrf	tblptru,c
  3233  000B6A  0E05               	movlw	(high __ramtop+-1)
  3234  000B6C  64F7               	cpfsgt	tblptrh,c
  3235  000B6E  D003               	bra	u1097
  3236  000B70  0008               	tblrd		*
  3237  000B72  50F5               	movf	tablat,w,c
  3238  000B74  D005               	bra	u1090
  3239  000B76                     u1097:
  3240  000B76  CFF6 FFE9          	movff	tblptrl,fsr0l
  3241  000B7A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3242  000B7E  50EF               	movf	indf0,w,c
  3243  000B80                     u1090:
  3244  000B80  0900               	iorlw	0
  3245  000B82  B4D8               	btfsc	status,2,c
  3246  000B84  0012               	return	
  3247  000B86  D7D6               	goto	l2018
  3248  000B88                     __end_of_clcd_print:
  3249                           	opt stack 0
  3250                           tblptru	equ	0xFF8
  3251                           tblptrh	equ	0xFF7
  3252                           tblptrl	equ	0xFF6
  3253                           tablat	equ	0xFF5
  3254                           intcon	equ	0xFF2
  3255                           intcon2	equ	0xFF1
  3256                           indf0	equ	0xFEF
  3257                           postinc0	equ	0xFEE
  3258                           fsr0h	equ	0xFEA
  3259                           fsr0l	equ	0xFE9
  3260                           wreg	equ	0xFE8
  3261                           indf2	equ	0xFDF
  3262                           fsr2h	equ	0xFDA
  3263                           fsr2l	equ	0xFD9
  3264                           status	equ	0xFD8
  3265                           
  3266 ;; *************** function _clcd_putch *****************
  3267 ;; Defined at:
  3268 ;;		line 51 in file "clcd.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  data            1    wreg     const unsigned char 
  3271 ;;  addr            1   16[COMRAM] unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  data            1   17[COMRAM] const unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3283 ;;      Params:         1       0       0       0       0       0       0
  3284 ;;      Locals:         1       0       0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0
  3286 ;;      Totals:         2       0       0       0       0       0       0
  3287 ;;Total ram usage:        2 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    2
  3290 ;; This function calls:
  3291 ;;		_clcd_write
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text27
  3298  000E42                     __ptext27:
  3299                           	opt stack 0
  3300  000E42                     _clcd_putch:
  3301                           	opt stack 28
  3302                           
  3303                           ;incstack = 0
  3304                           ;clcd_putch@data stored from wreg
  3305  000E42  6E3A               	movwf	clcd_putch@data,c
  3306                           
  3307                           ;clcd.c: 53: clcd_write(addr, 0);
  3308  000E44  0E00               	movlw	0
  3309  000E46  6E37               	movwf	clcd_write@control_bit,c
  3310  000E48  5039               	movf	clcd_putch@addr,w,c
  3311  000E4A  ECBA  F006         	call	_clcd_write
  3312                           
  3313                           ;clcd.c: 54: clcd_write(data, 1);
  3314  000E4E  0E01               	movlw	1
  3315  000E50  6E37               	movwf	clcd_write@control_bit,c
  3316  000E52  503A               	movf	clcd_putch@data,w,c
  3317  000E54  ECBA  F006         	call	_clcd_write
  3318  000E58  0012               	return		;funcret
  3319  000E5A                     __end_of_clcd_putch:
  3320                           	opt stack 0
  3321                           tblptru	equ	0xFF8
  3322                           tblptrh	equ	0xFF7
  3323                           tblptrl	equ	0xFF6
  3324                           tablat	equ	0xFF5
  3325                           intcon	equ	0xFF2
  3326                           intcon2	equ	0xFF1
  3327                           indf0	equ	0xFEF
  3328                           postinc0	equ	0xFEE
  3329                           fsr0h	equ	0xFEA
  3330                           fsr0l	equ	0xFE9
  3331                           wreg	equ	0xFE8
  3332                           indf2	equ	0xFDF
  3333                           fsr2h	equ	0xFDA
  3334                           fsr2l	equ	0xFD9
  3335                           status	equ	0xFD8
  3336                           
  3337 ;; *************** function _clcd_write *****************
  3338 ;; Defined at:
  3339 ;;		line 4 in file "clcd.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  byte            1    wreg     unsigned char 
  3342 ;;  control_bit     1   14[COMRAM] unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  byte            1   15[COMRAM] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3354 ;;      Params:         1       0       0       0       0       0       0
  3355 ;;      Locals:         1       0       0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0
  3357 ;;      Totals:         2       0       0       0       0       0       0
  3358 ;;Total ram usage:        2 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    1
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_init_clcd
  3365 ;;		_clcd_print
  3366 ;;		_clcd_putch
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text28
  3372  000D74                     __ptext28:
  3373                           	opt stack 0
  3374  000D74                     _clcd_write:
  3375                           	opt stack 27
  3376                           
  3377                           ;incstack = 0
  3378                           ;clcd_write@byte stored from wreg
  3379  000D74  6E38               	movwf	clcd_write@byte,c
  3380                           
  3381                           ;clcd.c: 6: PORTCbits.RC1 = control_bit;
  3382  000D76  B037               	btfsc	clcd_write@control_bit,0,c
  3383  000D78  D002               	bra	u1065
  3384  000D7A  9282               	bcf	3970,1,c	;volatile
  3385  000D7C  D001               	bra	u1066
  3386  000D7E                     u1065:
  3387  000D7E  8282               	bsf	3970,1,c	;volatile
  3388  000D80                     u1066:
  3389                           
  3390                           ;clcd.c: 7: PORTD = byte;
  3391  000D80  C038  FF83         	movff	clcd_write@byte,3971	;volatile
  3392                           
  3393                           ;clcd.c: 10: PORTCbits.RC2 = 1;
  3394  000D84  8482               	bsf	3970,2,c	;volatile
  3395                           
  3396                           ;clcd.c: 11: PORTCbits.RC2 = 0;
  3397  000D86  9482               	bcf	3970,2,c	;volatile
  3398                           
  3399                           ;clcd.c: 13: TRISD7 = 0xFF;
  3400  000D88  8E95               	bsf	3989,7,c	;volatile
  3401                           
  3402                           ;clcd.c: 14: PORTCbits.RC0 = 1;
  3403  000D8A  8082               	bsf	3970,0,c	;volatile
  3404                           
  3405                           ;clcd.c: 15: PORTCbits.RC1 = 0;
  3406  000D8C  9282               	bcf	3970,1,c	;volatile
  3407  000D8E                     l1960:
  3408                           
  3409                           ;clcd.c: 18: {
  3410                           ;clcd.c: 19: PORTCbits.RC2 = 1;
  3411  000D8E  8482               	bsf	3970,2,c	;volatile
  3412                           
  3413                           ;clcd.c: 20: PORTCbits.RC2 = 0;
  3414  000D90  9482               	bcf	3970,2,c	;volatile
  3415                           
  3416                           ;clcd.c: 21: } while (PORTDbits.RD7);
  3417  000D92  BE83               	btfsc	3971,7,c	;volatile
  3418  000D94  D7FC               	goto	l1960
  3419                           
  3420                           ;clcd.c: 23: PORTCbits.RC0 = 0;
  3421  000D96  9082               	bcf	3970,0,c	;volatile
  3422                           
  3423                           ;clcd.c: 24: TRISD7 = 0x00;
  3424  000D98  9E95               	bcf	3989,7,c	;volatile
  3425  000D9A  0012               	return		;funcret
  3426  000D9C                     __end_of_clcd_write:
  3427                           	opt stack 0
  3428                           tblptru	equ	0xFF8
  3429                           tblptrh	equ	0xFF7
  3430                           tblptrl	equ	0xFF6
  3431                           tablat	equ	0xFF5
  3432                           intcon	equ	0xFF2
  3433                           intcon2	equ	0xFF1
  3434                           indf0	equ	0xFEF
  3435                           postinc0	equ	0xFEE
  3436                           fsr0h	equ	0xFEA
  3437                           fsr0l	equ	0xFE9
  3438                           wreg	equ	0xFE8
  3439                           indf2	equ	0xFDF
  3440                           fsr2h	equ	0xFDA
  3441                           fsr2l	equ	0xFD9
  3442                           status	equ	0xFD8
  3443                           
  3444 ;; *************** function ___lwmod *****************
  3445 ;; Defined at:
  3446 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  dividend        2   14[COMRAM] unsigned int 
  3449 ;;  divisor         2   16[COMRAM] unsigned int 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  counter         1   18[COMRAM] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  2   14[COMRAM] unsigned int 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3461 ;;      Params:         4       0       0       0       0       0       0
  3462 ;;      Locals:         1       0       0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0
  3464 ;;      Totals:         5       0       0       0       0       0       0
  3465 ;;Total ram usage:        5 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    1
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text29
  3476  000C72                     __ptext29:
  3477                           	opt stack 0
  3478  000C72                     ___lwmod:
  3479                           	opt stack 29
  3480                           
  3481                           ;incstack = 0
  3482  000C72  5039               	movf	___lwmod@divisor,w,c
  3483  000C74  103A               	iorwf	___lwmod@divisor+1,w,c
  3484  000C76  B4D8               	btfsc	status,2,c
  3485  000C78  D018               	goto	l849
  3486  000C7A  0E01               	movlw	1
  3487  000C7C  6E3B               	movwf	___lwmod@counter,c
  3488  000C7E  D004               	goto	l2272
  3489  000C80                     l2270:
  3490  000C80  90D8               	bcf	status,0,c
  3491  000C82  3639               	rlcf	___lwmod@divisor,f,c
  3492  000C84  363A               	rlcf	___lwmod@divisor+1,f,c
  3493  000C86  2A3B               	incf	___lwmod@counter,f,c
  3494  000C88                     l2272:
  3495  000C88  AE3A               	btfss	___lwmod@divisor+1,7,c
  3496  000C8A  D7FA               	goto	l2270
  3497  000C8C                     l2274:
  3498  000C8C  5039               	movf	___lwmod@divisor,w,c
  3499  000C8E  5C37               	subwf	___lwmod@dividend,w,c
  3500  000C90  503A               	movf	___lwmod@divisor+1,w,c
  3501  000C92  5838               	subwfb	___lwmod@dividend+1,w,c
  3502  000C94  A0D8               	btfss	status,0,c
  3503  000C96  D004               	goto	l2278
  3504  000C98  5039               	movf	___lwmod@divisor,w,c
  3505  000C9A  5E37               	subwf	___lwmod@dividend,f,c
  3506  000C9C  503A               	movf	___lwmod@divisor+1,w,c
  3507  000C9E  5A38               	subwfb	___lwmod@dividend+1,f,c
  3508  000CA0                     l2278:
  3509  000CA0  90D8               	bcf	status,0,c
  3510  000CA2  323A               	rrcf	___lwmod@divisor+1,f,c
  3511  000CA4  3239               	rrcf	___lwmod@divisor,f,c
  3512  000CA6  2E3B               	decfsz	___lwmod@counter,f,c
  3513  000CA8  D7F1               	goto	l2274
  3514  000CAA                     l849:
  3515  000CAA  C037  F037         	movff	___lwmod@dividend,?___lwmod
  3516  000CAE  C038  F038         	movff	___lwmod@dividend+1,?___lwmod+1
  3517  000CB2  0012               	return		;funcret
  3518  000CB4                     __end_of___lwmod:
  3519                           	opt stack 0
  3520                           tblptru	equ	0xFF8
  3521                           tblptrh	equ	0xFF7
  3522                           tblptrl	equ	0xFF6
  3523                           tablat	equ	0xFF5
  3524                           intcon	equ	0xFF2
  3525                           intcon2	equ	0xFF1
  3526                           indf0	equ	0xFEF
  3527                           postinc0	equ	0xFEE
  3528                           fsr0h	equ	0xFEA
  3529                           fsr0l	equ	0xFE9
  3530                           wreg	equ	0xFE8
  3531                           indf2	equ	0xFDF
  3532                           fsr2h	equ	0xFDA
  3533                           fsr2l	equ	0xFD9
  3534                           status	equ	0xFD8
  3535                           
  3536 ;; *************** function ___lwdiv *****************
  3537 ;; Defined at:
  3538 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  dividend        2   20[COMRAM] unsigned int 
  3541 ;;  divisor         2   22[COMRAM] unsigned int 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  quotient        2   25[COMRAM] unsigned int 
  3544 ;;  counter         1   24[COMRAM] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2   20[COMRAM] unsigned int 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3554 ;;      Params:         4       0       0       0       0       0       0
  3555 ;;      Locals:         3       0       0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0
  3557 ;;      Totals:         7       0       0       0       0       0       0
  3558 ;;Total ram usage:        7 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text30
  3569  000BDE                     __ptext30:
  3570                           	opt stack 0
  3571  000BDE                     ___lwdiv:
  3572                           	opt stack 29
  3573                           
  3574                           ;incstack = 0
  3575  000BDE  0E00               	movlw	0
  3576  000BE0  6E43               	movwf	___lwdiv@quotient+1,c
  3577  000BE2  0E00               	movlw	0
  3578  000BE4  6E42               	movwf	___lwdiv@quotient,c
  3579  000BE6  503F               	movf	___lwdiv@divisor,w,c
  3580  000BE8  1040               	iorwf	___lwdiv@divisor+1,w,c
  3581  000BEA  B4D8               	btfsc	status,2,c
  3582  000BEC  D01C               	goto	l839
  3583  000BEE  0E01               	movlw	1
  3584  000BF0  6E41               	movwf	___lwdiv@counter,c
  3585  000BF2  D004               	goto	l2252
  3586  000BF4                     l2250:
  3587  000BF4  90D8               	bcf	status,0,c
  3588  000BF6  363F               	rlcf	___lwdiv@divisor,f,c
  3589  000BF8  3640               	rlcf	___lwdiv@divisor+1,f,c
  3590  000BFA  2A41               	incf	___lwdiv@counter,f,c
  3591  000BFC                     l2252:
  3592  000BFC  AE40               	btfss	___lwdiv@divisor+1,7,c
  3593  000BFE  D7FA               	goto	l2250
  3594  000C00                     l2254:
  3595  000C00  90D8               	bcf	status,0,c
  3596  000C02  3642               	rlcf	___lwdiv@quotient,f,c
  3597  000C04  3643               	rlcf	___lwdiv@quotient+1,f,c
  3598  000C06  503F               	movf	___lwdiv@divisor,w,c
  3599  000C08  5C3D               	subwf	___lwdiv@dividend,w,c
  3600  000C0A  5040               	movf	___lwdiv@divisor+1,w,c
  3601  000C0C  583E               	subwfb	___lwdiv@dividend+1,w,c
  3602  000C0E  A0D8               	btfss	status,0,c
  3603  000C10  D005               	goto	l2262
  3604  000C12  503F               	movf	___lwdiv@divisor,w,c
  3605  000C14  5E3D               	subwf	___lwdiv@dividend,f,c
  3606  000C16  5040               	movf	___lwdiv@divisor+1,w,c
  3607  000C18  5A3E               	subwfb	___lwdiv@dividend+1,f,c
  3608  000C1A  8042               	bsf	___lwdiv@quotient,0,c
  3609  000C1C                     l2262:
  3610  000C1C  90D8               	bcf	status,0,c
  3611  000C1E  3240               	rrcf	___lwdiv@divisor+1,f,c
  3612  000C20  323F               	rrcf	___lwdiv@divisor,f,c
  3613  000C22  2E41               	decfsz	___lwdiv@counter,f,c
  3614  000C24  D7ED               	goto	l2254
  3615  000C26                     l839:
  3616  000C26  C042  F03D         	movff	___lwdiv@quotient,?___lwdiv
  3617  000C2A  C043  F03E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3618  000C2E  0012               	return		;funcret
  3619  000C30                     __end_of___lwdiv:
  3620                           	opt stack 0
  3621                           tblptru	equ	0xFF8
  3622                           tblptrh	equ	0xFF7
  3623                           tblptrl	equ	0xFF6
  3624                           tablat	equ	0xFF5
  3625                           intcon	equ	0xFF2
  3626                           intcon2	equ	0xFF1
  3627                           indf0	equ	0xFEF
  3628                           postinc0	equ	0xFEE
  3629                           fsr0h	equ	0xFEA
  3630                           fsr0l	equ	0xFE9
  3631                           wreg	equ	0xFE8
  3632                           indf2	equ	0xFDF
  3633                           fsr2h	equ	0xFDA
  3634                           fsr2l	equ	0xFD9
  3635                           status	equ	0xFD8
  3636                           
  3637 ;; *************** function _isr *****************
  3638 ;; Defined at:
  3639 ;;		line 5 in file "isr.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3653 ;;      Params:         0       0       0       0       0       0       0
  3654 ;;      Locals:         0       0       0       0       0       0       0
  3655 ;;      Temps:         14       0       0       0       0       0       0
  3656 ;;      Totals:        14       0       0       0       0       0       0
  3657 ;;Total ram usage:       14 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		Interrupt level 2
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	intcode
  3667  000008                     __pintcode:
  3668                           	opt stack 0
  3669  000008                     _isr:
  3670                           	opt stack 24
  3671                           
  3672                           ;incstack = 0
  3673  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3674  00000A  CFFA F029          	movff	pclath,??_isr
  3675  00000E  CFFB F02A          	movff	pclatu,??_isr+1
  3676  000012  EDD1  F004         	call	int_func,f	;refresh shadow registers
  3677                           pclatu	equ	0xFFB
  3678                           pclath	equ	0xFFA
  3679                           tblptru	equ	0xFF8
  3680                           tblptrh	equ	0xFF7
  3681                           tblptrl	equ	0xFF6
  3682                           tablat	equ	0xFF5
  3683                           intcon	equ	0xFF2
  3684                           intcon2	equ	0xFF1
  3685                           indf0	equ	0xFEF
  3686                           postinc0	equ	0xFEE
  3687                           fsr0h	equ	0xFEA
  3688                           fsr0l	equ	0xFE9
  3689                           wreg	equ	0xFE8
  3690                           indf2	equ	0xFDF
  3691                           fsr2h	equ	0xFDA
  3692                           fsr2l	equ	0xFD9
  3693                           status	equ	0xFD8
  3694                           
  3695                           	psect	intcode_body
  3696  0009A2                     __pintcode_body:
  3697                           	opt stack 24
  3698  0009A2                     int_func:
  3699                           	opt stack 24
  3700  0009A2  0006               	pop		; remove dummy address from shadow register refresh
  3701  0009A4  CFE9 F02B          	movff	fsr0l,??_isr+2
  3702  0009A8  CFEA F02C          	movff	fsr0h,??_isr+3
  3703  0009AC  CFE1 F02D          	movff	fsr1l,??_isr+4
  3704  0009B0  CFE2 F02E          	movff	fsr1h,??_isr+5
  3705  0009B4  CFD9 F02F          	movff	fsr2l,??_isr+6
  3706  0009B8  CFDA F030          	movff	fsr2h,??_isr+7
  3707  0009BC  CFF3 F031          	movff	prodl,??_isr+8
  3708  0009C0  CFF4 F032          	movff	prodh,??_isr+9
  3709  0009C4  CFF6 F033          	movff	tblptrl,??_isr+10
  3710  0009C8  CFF7 F034          	movff	tblptrh,??_isr+11
  3711  0009CC  CFF8 F035          	movff	tblptru,??_isr+12
  3712  0009D0  CFF5 F036          	movff	tablat,??_isr+13
  3713                           
  3714                           ;isr.c: 7: static unsigned short count;
  3715                           ;isr.c: 9: if (TMR0IF)
  3716  0009D4  A4F2               	btfss	intcon,2,c	;volatile
  3717  0009D6  D016               	goto	i2l32
  3718                           
  3719                           ;isr.c: 10: {
  3720                           ;isr.c: 11: TMR0 = TMR0 + 8;
  3721  0009D8  0E08               	movlw	8
  3722  0009DA  24D6               	addwf	4054,w,c	;volatile
  3723  0009DC  6ED6               	movwf	4054,c	;volatile
  3724  0009DE  0E00               	movlw	0
  3725  0009E0  20D7               	addwfc	4055,w,c	;volatile
  3726  0009E2  6ED7               	movwf	4055,c	;volatile
  3727                           
  3728                           ;isr.c: 13: if (count++ == 200)
  3729  0009E4  4A0A               	infsnz	isr@count,f,c
  3730  0009E6  2A0B               	incf	isr@count+1,f,c
  3731  0009E8  0EC9               	movlw	201
  3732  0009EA  180A               	xorwf	isr@count,w,c
  3733  0009EC  100B               	iorwf	isr@count+1,w,c
  3734  0009EE  A4D8               	btfss	status,2,c
  3735  0009F0  D008               	goto	i2l1426
  3736                           
  3737                           ;isr.c: 14: {
  3738                           ;isr.c: 15: count = 0;
  3739  0009F2  0E00               	movlw	0
  3740  0009F4  6E0B               	movwf	isr@count+1,c
  3741  0009F6  0E00               	movlw	0
  3742  0009F8  6E0A               	movwf	isr@count,c
  3743                           
  3744                           ;isr.c: 16: flag = 1;
  3745  0009FA  0E00               	movlw	0
  3746  0009FC  6E09               	movwf	_flag+1,c
  3747  0009FE  0E01               	movlw	1
  3748  000A00  6E08               	movwf	_flag,c
  3749  000A02                     i2l1426:
  3750                           
  3751                           ;isr.c: 17: }
  3752                           ;isr.c: 19: TMR0IF = 0;
  3753  000A02  94F2               	bcf	intcon,2,c	;volatile
  3754  000A04                     i2l32:
  3755  000A04  C036  FFF5         	movff	??_isr+13,tablat
  3756  000A08  C035  FFF8         	movff	??_isr+12,tblptru
  3757  000A0C  C034  FFF7         	movff	??_isr+11,tblptrh
  3758  000A10  C033  FFF6         	movff	??_isr+10,tblptrl
  3759  000A14  C032  FFF4         	movff	??_isr+9,prodh
  3760  000A18  C031  FFF3         	movff	??_isr+8,prodl
  3761  000A1C  C030  FFDA         	movff	??_isr+7,fsr2h
  3762  000A20  C02F  FFD9         	movff	??_isr+6,fsr2l
  3763  000A24  C02E  FFE2         	movff	??_isr+5,fsr1h
  3764  000A28  C02D  FFE1         	movff	??_isr+4,fsr1l
  3765  000A2C  C02C  FFEA         	movff	??_isr+3,fsr0h
  3766  000A30  C02B  FFE9         	movff	??_isr+2,fsr0l
  3767  000A34  C02A  FFFB         	movff	??_isr+1,pclatu
  3768  000A38  C029  FFFA         	movff	??_isr,pclath
  3769  000A3C  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3770  000A3E  0011               	retfie		f
  3771  000A40                     __end_of_isr:
  3772                           	opt stack 0
  3773                           pclatu	equ	0xFFB
  3774                           pclath	equ	0xFFA
  3775                           tblptru	equ	0xFF8
  3776                           tblptrh	equ	0xFF7
  3777                           tblptrl	equ	0xFF6
  3778                           tablat	equ	0xFF5
  3779                           prodh	equ	0xFF4
  3780                           prodl	equ	0xFF3
  3781                           intcon	equ	0xFF2
  3782                           intcon2	equ	0xFF1
  3783                           indf0	equ	0xFEF
  3784                           postinc0	equ	0xFEE
  3785                           fsr0h	equ	0xFEA
  3786                           fsr0l	equ	0xFE9
  3787                           wreg	equ	0xFE8
  3788                           fsr1h	equ	0xFE2
  3789                           fsr1l	equ	0xFE1
  3790                           indf2	equ	0xFDF
  3791                           fsr2h	equ	0xFDA
  3792                           fsr2l	equ	0xFD9
  3793                           status	equ	0xFD8
  3794                           pclatu	equ	0xFFB
  3795                           pclath	equ	0xFFA
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           prodh	equ	0xFF4
  3801                           prodl	equ	0xFF3
  3802                           intcon	equ	0xFF2
  3803                           intcon2	equ	0xFF1
  3804                           indf0	equ	0xFEF
  3805                           postinc0	equ	0xFEE
  3806                           fsr0h	equ	0xFEA
  3807                           fsr0l	equ	0xFE9
  3808                           wreg	equ	0xFE8
  3809                           fsr1h	equ	0xFE2
  3810                           fsr1l	equ	0xFE1
  3811                           indf2	equ	0xFDF
  3812                           fsr2h	equ	0xFDA
  3813                           fsr2l	equ	0xFD9
  3814                           status	equ	0xFD8
  3815                           
  3816                           	psect	rparam
  3817  0000                     pclatu	equ	0xFFB
  3818                           pclath	equ	0xFFA
  3819                           tblptru	equ	0xFF8
  3820                           tblptrh	equ	0xFF7
  3821                           tblptrl	equ	0xFF6
  3822                           tablat	equ	0xFF5
  3823                           prodh	equ	0xFF4
  3824                           prodl	equ	0xFF3
  3825                           intcon	equ	0xFF2
  3826                           intcon2	equ	0xFF1
  3827                           indf0	equ	0xFEF
  3828                           postinc0	equ	0xFEE
  3829                           fsr0h	equ	0xFEA
  3830                           fsr0l	equ	0xFE9
  3831                           wreg	equ	0xFE8
  3832                           fsr1h	equ	0xFE2
  3833                           fsr1l	equ	0xFE1
  3834                           indf2	equ	0xFDF
  3835                           fsr2h	equ	0xFDA
  3836                           fsr2l	equ	0xFD9
  3837                           status	equ	0xFD8
  3838                           
  3839                           	psect	temp
  3840  000047                     btemp:
  3841                           	opt stack 0
  3842  000047                     	ds	1
  3843  0000                     int$flags	set	btemp
  3844                           pclatu	equ	0xFFB
  3845                           pclath	equ	0xFFA
  3846                           tblptru	equ	0xFF8
  3847                           tblptrh	equ	0xFF7
  3848                           tblptrl	equ	0xFF6
  3849                           tablat	equ	0xFF5
  3850                           prodh	equ	0xFF4
  3851                           prodl	equ	0xFF3
  3852                           intcon	equ	0xFF2
  3853                           intcon2	equ	0xFF1
  3854                           indf0	equ	0xFEF
  3855                           postinc0	equ	0xFEE
  3856                           fsr0h	equ	0xFEA
  3857                           fsr0l	equ	0xFE9
  3858                           wreg	equ	0xFE8
  3859                           fsr1h	equ	0xFE2
  3860                           fsr1l	equ	0xFE1
  3861                           indf2	equ	0xFDF
  3862                           fsr2h	equ	0xFDA
  3863                           fsr2l	equ	0xFD9
  3864                           status	equ	0xFD8


Data Sizes:
    Strings     25
    Constant    0
    Data        3
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     27      70
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main@s	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main@t	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[4]), STR_2(CODE[4]), main@buff(BANK0[5]), STR_1(CODE[17]), 
		 -> time(COMRAM[9]), date(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _init_config->_init_ds1307
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _clcd_print->_clcd_write
    _clcd_putch->_clcd_write
    ___lwdiv->_read_adc

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   11857
                                              0 BANK0     11    11      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                       _display_time
                           _get_time
                        _init_config
                           _read_adc
               _read_internal_eeprom
                      _read_switches
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (1) _write_internal_eeprom                                2     1      1    2218
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        3     3      0     134
                                             14 COMRAM     3     3      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_internal_eeprom                                 1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      34
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1334
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                    _init_i2c_config
                 _init_matrix_keypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     579
                                             17 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     469
                                             15 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     755
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                             15 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                             14 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (5) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_time                                         0     0      0    2083
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    2083
                                             16 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    1202
                                             16 COMRAM     2     1      1
                         _clcd_write
               _read_internal_eeprom (ARG)
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1     755
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     386
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     549
                                             20 COMRAM     7     3      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     _read_adc (ARG)
   ___lwmod
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
     _read_internal_eeprom (ARG)
   _clcd_write
   _display_time
     _clcd_print
       _clcd_write
   _get_time
     _read_ds1307
       _i2c_read
         _i2c_no_ack
         _i2c_rx_mode
           _i2c_idle
       _i2c_rep_start
         _i2c_idle
       _i2c_start
         _i2c_idle
       _i2c_stop
         _i2c_idle
       _i2c_write
         _i2c_idle
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
       _write_ds1307
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
     _init_i2c
     _init_i2c_config
     _init_matrix_keypad
     _init_timer0
   _read_adc
   _read_internal_eeprom
   _read_switches
     _scan_key
   _write_internal_eeprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1B      46       1       74.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51       3        0.0%
DATA                 0      0      51      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Sep 28 12:09:25 2019

                clcd_print@addr 003B                  clcd_print@data 0039                              l80 0A56  
                            l82 0A5E                              l92 0A9C                              l85 0A74  
                            l77 0A4E                              l94 0AA4                              l86 0A8C  
                            l87 0A7C                              l79 0A66                              l96 0AAC  
                            l89 0A84                              _GO 007E11                     __CFG_OSC$XT 000000  
            _init_matrix_keypad 0E82                             l306 0EF0                             l256 0DBA  
                           l433 0DC4                             l839 0C26                             _CKE 007E3E  
                           l849 0CAA                             _GIE 007F97                             _PEN 007E2A  
                           _SEN 007E28                             _PSA 007EAB                             _SMP 007E3F  
                 ?_display_time 0029                             _isr 0008                  clcd_putch@addr 0039  
                clcd_putch@data 003A                             wreg 000FE8             ?_init_matrix_keypad 0029  
                  __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000                            l2022 0B60  
                          l2018 0B34                            l2150 0C62                            l2312 0630  
                          l2250 0BF4                            l2146 0C56                            l2252 0BFC  
                          l2172 0AE4                            l2156 0C6E                            l2340 0702  
                          l2316 065C                            l2262 0C1C                            l2254 0C00  
                          l2270 0C80                            l2430 08C4                            l2414 087A  
                          l2350 0732                            l2272 0C88                            l2274 0C8C  
                          l2098 0AB4                            l2418 088E                            l2278 0CA0  
                          l2438 08E4                            l2384 07DE                            l1960 0D8E  
                          _ADFM 007E07                            ?_isr 0029                            _ADON 007E10  
                          _CHS0 007E12                            _CHS1 007E13                            _CHS2 007E14  
                          _CHS3 007E15                            STR_1 0601                            STR_2 0616  
                          STR_3 0612                            _T0IF 007F92                            _T0CS 007EAD  
                          u1080 0B58                            u1400 06FE                            u1065 0D7E  
                          u1066 0D80                            u1090 0B80                            u1410 0700  
                          u1087 0B4E                            u1097 0B76                            _PEIE 007F96  
                          _RCEN 007E2B                            i2l32 0A04                            _RBPU 007F8F  
                          _TMR0 000FD6                            _RSEN 007E29                            _date 0015  
                          _flag 0008                            _main 061C                            _time 0020  
                          fsr0h 000FEA                            fsr1h 000FE2                            indf0 000FEF  
                          fsr0l 000FE9                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            btemp 0047  
                          pclat 000FFA                            prodh 000FF4                            prodl 000FF3  
                          start 0016            ??_init_matrix_keypad 0037                    ___param_bank 000010  
                clcd_write@byte 0038                   _i2c_rep_start 0EE0                   ??_i2c_rx_mode 0037  
       __end_of_init_i2c_config 0EA6                           ??_isr 0029                    ?_init_ds1307 0029  
                         _ADCS0 007E00                           _ADCS1 007E01                           _ADCS2 007E02  
                         ?_main 0029                    ?_read_ds1307 0029                           _ACKEN 007E2C  
                         _ACKDT 007E2D                  ??_display_time 003C                           _BCLIF 007D0B  
                         _ACQT0 007E03                           _ACQT1 007E04                           _ACQT2 007E05  
                         _EEADR 000FA9                 __end_of___lwdiv 0C30                 __end_of___lwmod 0CB4  
                  ?_init_config 0029                           _VCFG0 007E0C                           _VCFG1 007E0D  
                         _PORTB 000F81                           _PORTD 000F83                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _SSPIF 007CF3  
                  ?_init_timer0 0029                           main@i 0060                           main@s 0010  
                         main@t 0012                           main@z 0044                  __CFG_BOREN$OFF 000000  
                         tablat 000FF5                           status 000FD8         ??_write_internal_eeprom 0038  
              init_ds1307@dummy 003A                      _i2c_no_ack 0EF8           __size_of_write_ds1307 001E  
               __initialization 0CB4                  ?_i2c_rep_start 0029                    __end_of_main 09A2  
              __end_of_i2c_idle 0EF8                __end_of_i2c_read 0ED0                __end_of_i2c_stop 0ED8  
                        ??_main 0044                   __activetblptr 000002             __end_of_i2c_rx_mode 0EF0  
                        _ADCON1 000FC1                read_switches@key 0039                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _EEDATA 000FA8                          _EECON2 000FA7  
                        _T08BIT 007EAE                          _GODONE 007E11                          i2l1426 0A02  
                  _write_ds1307 0E0C                          _TMR0IE 007F95                          _TMR0IF 007F92  
                        _TMR0ON 007EAF                          _SSPADD 000FC8                          _TRISC3 007CA3  
                        _TRISC4 007CA4                          _TRISD7 007CAF                          _SSPBUF 000FC9  
            __size_of_i2c_start 0008              __size_of_i2c_write 000C                __end_of_get_time 0B28  
                     ??___lwdiv 0041                       ??___lwmod 003B                ?_init_i2c_config 0029  
              __end_of_init_i2c 0E70                __end_of_init_adc 0D74                __end_of_read_adc 0DE8  
                        clear_0 0CBA                    _calender_reg 0001                __end_of_scan_key 0AB8  
                  __pdataCOMRAM 0044                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8   __size_of_read_internal_eeprom 0012  
                    __accesstop 0060         __end_of__initialization 0CDE                 __CFG_PBADEN$OFF 000000  
          __end_of_display_time 0EB8                   ___rparam_used 000001                 ??_i2c_rep_start 0037  
                   ?_i2c_no_ack 0029                  __pcstackCOMRAM 0029                     _i2c_rx_mode 0EE8  
        __size_of_read_switches 0042            __size_of_init_ds1307 0056               __end_of_i2c_start 0EE0  
             __end_of_i2c_write 0EC4            __size_of_read_ds1307 002A            __size_of_init_config 0024  
          __size_of_init_timer0 0018                       ?_i2c_idle 0029                       ?_i2c_read 0029  
                     ?_i2c_stop 0029              __size_of_init_clcd 0036                      _clcd_print 0B28  
                    _clcd_putch 0E42                      _clcd_write 0D74                 read_ds1307@data 0039  
             read_switches@key1 0037               read_switches@once 0046                         _ACKSTAT 007E2E  
           __size_of_i2c_no_ack 0006                         _SSPCON1 000FC6                         _SSPSTAT 000FC7  
                     ?_get_time 0029                   _read_switches 0C30                      ??_i2c_idle 0037  
                    ??_i2c_read 0037                      ??_i2c_stop 0037                       ?_init_i2c 0029  
   read_internal_eeprom@address 0037                       ?_init_adc 0029                       ?_read_adc 0037  
                     ?_scan_key 0029  __size_of_write_internal_eeprom 0026   __end_of_write_internal_eeprom 0DC2  
                       __Hparam 0000                         __Lparam 0000     __size_of_init_matrix_keypad 0012  
                       ___lwdiv 0BDE                         ___lwmod 0C72                    __psmallconst 0600  
                       __pcinit 0CB4                         __ramtop 0600                         __ptext0 061C  
                       __ptext1 0D9C                         __ptext2 0C30                         __ptext3 0A40  
                       __ptext4 0E70                         __ptext5 0DC2                         __ptext6 0DE8  
                       __ptext7 0E2A                         __ptext8 0E82                         __ptext9 0E94  
             __end_of_init_clcd 0D22                    __size_of_isr 0A38       write_internal_eeprom@data 0037  
                ?_read_switches 0029                         main@key 0069                      ??_get_time 003A  
                __pintcode_body 09A2           __size_of_display_time 0012            end_of_initialization 0CDE  
                    ??_init_i2c 0037                      ??_init_adc 0037                   __Lmediumconst 0000  
                    ??_read_adc 0039                         int_func 09A2                  main@prog_cycle 000E  
                    ??_scan_key 0037                     ?_clcd_print 0039                     ?_clcd_putch 0039  
                   ?_clcd_write 0037                         postinc0 000FEE                 main@adc_reg_val 0062  
                     _PORTBbits 000F81                       _PORTCbits 000F82                       _PORTDbits 000F83  
               read_adc@channel 0029                    _display_time 0EA6                   i2c_write@data 0037  
               read_adc@reg_val 003B                      main@toggle 0014                    ??_i2c_no_ack 0037  
  __end_of_read_internal_eeprom 0E82                    ?_i2c_rx_mode 0029                   __pidataCOMRAM 0EFE  
           start_initialization 0CB4        __size_of_init_i2c_config 0012                 ??_read_switches 0037  
           __size_of_clcd_print 0060             __size_of_clcd_putch 0018             __size_of_clcd_write 0028  
                     _i2c_start 0ED8                     __end_of_isr 0A40                       _i2c_write 0EB8  
            __end_of_i2c_no_ack 0EFE               __size_of_i2c_idle 0008               __size_of_i2c_read 000C  
             __size_of_i2c_stop 0008           __end_of_i2c_rep_start 0EE8                   ??_init_ds1307 003A  
                 ??_read_ds1307 0038     read_switches@detection_type 0038                   ??_init_config 003B  
                 ??_init_timer0 0037                     __pbssCOMRAM 0001                   __pcstackBANK0 0060  
                    ?_i2c_start 0029                      ?_i2c_write 0029               __size_of_get_time 0070  
             __size_of_init_i2c 0016               __size_of_init_adc 0028               __size_of_read_adc 0026  
              ___lwdiv@dividend 003D               __size_of_scan_key 0078                       __pintcode 0008  
            read_ds1307@address 0038                        ?___lwdiv 003D                       _clock_reg 0005  
                      ?___lwmod 0037                     __smallconst 0600             __end_of_init_ds1307 0BDE  
           __end_of_read_ds1307 0D4C                ___lwdiv@quotient 0042                       _init_clcd 0CEC  
           __end_of_init_config 0E0C            _read_internal_eeprom 0E70                   ?_write_ds1307 0038  
           __end_of_init_timer0 0E42               ??_init_i2c_config 0037                    ??_clcd_print 003C  
                  ??_clcd_putch 003A      __end_of_init_matrix_keypad 0E94                    ??_clcd_write 0038  
                      _PIR1bits 000F9E                        _PIR2bits 000FA1           _write_internal_eeprom 0D9C  
          __size_of_i2c_rx_mode 0008           clcd_write@control_bit 0037                     ??_i2c_start 0037  
            __end_of_clcd_print 0B88                     ??_i2c_write 0037              __end_of_clcd_putch 0E5A  
            __end_of_clcd_write 0D9C                      ?_init_clcd 0029           ?_read_internal_eeprom 0029  
                ??_write_ds1307 0039                        _i2c_idle 0EF0                        _i2c_read 0EC4  
                      _i2c_stop 0ED0                 main@duty_change 000C                      _EECON1bits 000FA6  
                      __Hrparam 0000                        __Lrparam 0000                     _init_ds1307 0B88  
              __size_of___lwdiv 0052                __size_of___lwmod 0042                     _read_ds1307 0D22  
                   _init_config 0DE8             write_ds1307@address 0039                     _init_timer0 0E2A  
               ___lwdiv@divisor 003F                 ___lwdiv@counter 0041                        __ptext10 0E5A  
                      __ptext11 0B88                        __ptext20 0EE0                        __ptext12 0E0C  
                      __ptext21 0EC4                        __ptext13 0CEC                        __ptext30 0BDE  
                      __ptext22 0EE8                        __ptext14 0D4C                        __ptext23 0EF0  
                      __ptext15 0AB8                        __ptext24 0EF8                        __ptext16 0D22  
                      __ptext25 0EA6                        __ptext17 0EB8                        __ptext26 0B28  
                      __ptext18 0ED0                        __ptext27 0E42                        __ptext19 0ED8  
                      __ptext28 0D74                        __ptext29 0C72                        _get_time 0AB8  
                      _init_i2c 0E5A                        _init_adc 0D4C                        _read_adc 0DC2  
                 __size_of_main 0386                        _scan_key 0A40          ?_write_internal_eeprom 0037  
                      int$flags 0047                        main@key1 006A                        main@buff 0064  
                      isr@count 000A          ??_read_internal_eeprom 0037                     ??_init_clcd 0039  
         __end_of_read_switches 0C72                        intlevel2 0000                ___lwmod@dividend 0037  
          __end_of_write_ds1307 0E2A                 _init_i2c_config 0E94                 ___lwmod@divisor 0039  
               ___lwmod@counter 003B                     _SSPCON2bits 000FC5          __size_of_i2c_rep_start 0008  
              write_ds1307@data 0038    write_internal_eeprom@address 0038  
